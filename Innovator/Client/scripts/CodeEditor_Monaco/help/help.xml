<?xml version="1.0" encoding="UTF-8"?>
  
  
    
      
        
        
          
            
            
          
          
            
            
            
            
          
        
        
          
            
            
            
          
        
      
    
    
      
        
          
            
          
        
        
          
            
          
        
        
      
    
    
      
        
        
        
        
        
        
          
            
          
          
        
        
          
            
          
        
        
          
            
            
          
          
            
            
          
        
        
          
          
            
          
        
        
          
            
              
              
            
            
              
                
                  
                
              
            
          
        
        
          
            
              
              
              
            
            
          
        
      
    
    
      
        
          
            
              
              
              
            
            
          
        
      
    
    
      
        
      
    
    
      
        
        
        
        
        
        
          
            
          
          
            
          
        
        
          
          
            
              
              
              
            
            
            
          
        
      
    
    
      
        
        
        
          
            
            
          
          
            
            
            
            
            
            
          
        
        
          
            
            
            
          
        
      
    
    
      
        
          
            
          
        
        
          
            
          
        
        
          
            
          
        
        
          
            
          
        
        
        
        
        
        
          
            
          
        
        
        
          
            
            
          
          
            
            
            
            
            
            
            
            
            
          
        
        
          
            
            
            
            
            
          
          
            
            
            
          
        
        
          
            
          
          
          
        
        
          
            
              
              
              
            
            
            
          
        
      
    
  
  
    
      
    
    
      
    
    
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
      
    
    
      
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
      
    
    
      
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
      
    
    
      
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
      
      
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
    
    
      
      
    
    
      
      
      
      <AML>
<Item type="HelpItem">
<id>T:Aras.IOM.HttpServerConnection</id>
<label>HttpServerConnection</label>
<code>Public  HttpServerConnection</code>
<comments><![CDATA[Implementation of over HTTP.]]></comments>
</Item>
<Item type="HelpItem">
<id>T:Aras.IOM.I18NSessionContext</id>
<label>I18NSessionContext</label>
<code>Public  I18NSessionContext</code>
<comments><![CDATA[The class represents an internationalization context of a client session. Every client of any type (e.g. standard Innovator client; standalone .NET client; etc.) has an instance of the class associated with each of its sessions. The context defines what locale, time zone, etc. are used by the session; this affects what kind of data is returned from the server and how the locale sensitive data (date, float, etc.) is formatted. The class also provides methods for converting from a locale specific formats of the session to neutral formats that are used in AML for sending\receiving data to\from Innovator server. In order to correctly build or interpret an AML it's important to remember the following: Locale sensitive types ( 'date' | 'float' | 'decimal' ) must be always presented in AML in neutral format Dates must be always presented in AML in the time zone of the session]]></comments>
</Item>
<Item type="HelpItem">
<id>T:Aras.IOM.Innovator</id>
<label>Innovator</label>
<code>Public  Innovator</code>
<comments><![CDATA[The Innovator class provides methods for connecting to Aras Innovator Server and for performing miscellaneous mostly non-Item related operations.]]></comments>
</Item>
<Item type="HelpItem">
<id>T:Aras.IOM.IomFactory</id>
<label>IomFactory</label>
<code>Public  IomFactory</code>
<comments><![CDATA[Provides method to create instances.]]></comments>
<remarks><![CDATA[There is no public constructor defined for this class. All its public methods are static. To get a refernce to IomFactory instance in JavaScript code one may: a) use aras.IomFactoryproperty; b) access IomFactory defined on custom HTML page. For example, customer wrote a page with the following HTML code: 
            ...
            <OBJECT id="IomFactory" classId="../cbin/IOM.dll#Aras.IOM.IomFactory"></OBJECT>
            ...
             Then the IomFactory may be accessed from JavaScript as 
            ...
            <script>
              var iomFactory = document.getElementById("IomFactory").object;
              var connection = iomFactory.CreateHttpServerConnection("http://", "db", "userName", "password");
            </script>
            ...
            ]]></remarks>
</Item>
<Item type="HelpItem">
<id>T:Aras.IOM.Item</id>
<label>Item</label>
<code>Public  Item</code>
<comments><![CDATA[The class provides interface to AML structure in memory as well as means of communication with Innovator server. Depending of Item's dom internal structure, as well as its node and nodeList values the instance of this class may represents one of the following: Single Innovator Item of an arbitrary ItemType. In this case Item.node!=null, and inside of Item.dom this node can refer to any XmlNode with localName <Item>. Notice that in case of Single item the Item.node.OuterXml will look like this <Item /> or this <Item > <prop1>a</prop1> <prop2>b</prop2> </Item> A collection of Innovator Items, as in a case when more then one Innovator Business Item being returned by the Server on a single request from client. In this case Item.nodeList!=null and Item.dom.OuterXml should comply with one of two following formats: (1) AML wrapper <AML> <Item ... /> ... <Item ... /> </AML> or (2) SOAP-Result wrapper <SOAP-ENV:Envelope xmlns:SOAP-ENV=.../> <SOAP-ENV:Body> <Result> <Item /> ... <Item /> </Result> </SOAP-ENV:Body> </SOAP-ENV:Envelope> Error as in the case when a client request results in error from the Server. In this case both Item.node and Item.nodeList are set to null, while Item.dom.OuterXml complies with the folowing format: <SOAP-ENV:Envelope xmlns:SOAP-ENV=.../> <SOAP-ENV:Body> <SOAP-ENV:Fault> <faultcode>...</faultcode> <faultactor>...</faultactor> <detail><...></detail> </SOAP-ENV:Fault> </SOAP-ENV:Body> </SOAP-ENV:Envelope> Result to represent an arbitrary text wrapped by <SOAP-ENV> <Result> tags. Again, both Item.node and Item.nodeList are set to null in this case, while Item.dom.OuterXml complies with the following format: <SOAP-ENV:Envelope xmlns:SOAP-ENV=.../> <SOAP-ENV:Body> <Result>[text]</Result> </SOAP-ENV:Body> </SOAP-ENV:Envelope> Logical to represent a set of Innovator Item's property-nodes wrapped in logical statement by one of three logical tags: <or>, <and>, or <not> usually used to specify the search criteria for the action "get". Because in this case one of three logical tags is the root tag for the logical Item.node its OuterXml may look like this: <and> <prop1>a</prop1> <prop2>b</prop2> </and> Methods of the class allow: get\set\add\remove attributes and\or properties of an item or an error, i.e. modify AML in memory send requests to server (instance of the class is interpreted as an AML request; note that server response is also returned in a form of an instance of the class, i.e. response AML is encapsulated as an Item).]]></comments>
<remarks><![CDATA[ There are two major types of methods in the class: methods that only work with item's AML in memory and methods that communicate with Innovator server, i.e. send request(s) to and get response(s) from the server. All get\set type of methods as well as isXXX(...) (e.g. isError(), isCollection(), etc.) and add\remove methods (e.g.  addRelationship(...), removeProperty(...), etc.) belong to the former group. Methods like fetchXXX(...) (e.g. fetchLockStatus()), apply(...), email(...), promote(...), lock\unlockItem(...), etc. belong to the later group. In case method sends a request to the server it must be explicitly mentioned in the method comments.  If instance of the class is an "error" item, it contains a single <Fault> node that is SOAP Fault element. The SOAP Fault element is used to carry error and/or status information within a SOAP message. If present, the SOAP Fault element MUST appear as a body entry and MUST NOT appear more than once within a Body element. According to SOAP 1.1 specification the Fault element itself must contain a 'faultcode' element and a 'faultstring' element, and optionally 'faultactor' and 'detail' elements.  In case of multilingual property AML may contain more than one tag for the same property where each tag will have a different value of the attribute xml:lang. Multilingual property tag without xml:lang denotes the property value for the language of the session; so, if the session language is French (language code is 'fr') then the following tags are equivalent: <name>Andre</name> and <name xml:lang='fr'>Andre</name>. ]]></remarks>
</Item>
<Item type="HelpItem">
<id>T:Aras.IOM.ServerConnectionBase</id>
<label>ServerConnectionBase</label>
<code>Public  ServerConnectionBase</code>
<comments><![CDATA[Base class for standard implementations. This class is and so cannot be instantiated.]]></comments>
</Item>
<Item type="HelpItem">
<id>T:Aras.IOM.WinAuthHttpServerConnection</id>
<label>WinAuthHttpServerConnection</label>
<code>Public  WinAuthHttpServerConnection</code>
<comments><![CDATA[The class extends the HttpServerConnection class allowing to connect to Innovator server that is configured to use Windows authentication instead of Innovator's database authentication.]]></comments>
<remarks><![CDATA[The class is supposed to be used only when Innovator server is configured to use native Windows authentication. The class uses credentials of the user that is currently logged on the client machine. It connects to the special aspx on server (Innovator\Client\scripts\IOMLogin.aspx) that must be setup to use Windows authentication and not use anonymous access (for more info see: http://www.aras.com/university/TechNotes/ActiveDirectory%20Configuration%20Notes.pdf and "Login Hooks.doc" that is a part of the documentation for every release).]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.CallAction(System.String,System.Xml.XmlDocument,System.Xml.XmlDocument)</id>
<label>CallAction</label>
<arguments>
<parameter type="" name="actionName">Action name (e.g. "ApplyAML", etc.)</parameter>
<parameter type="" name="inDom">AML that has to be sent to the server</parameter>
<parameter type="" name="outDom">Output parameter: empty XmlDocument that is filled with the server response.</parameter>
</arguments>
<code>Public  CallAction(System.String,System.Xml.XmlDocument,System.Xml.XmlDocument)</code>
<comments><![CDATA[Send a request with the specified action and AML to Innovator server and write the obtained response into the outDOM.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.DebugLog(System.String,System.Object)</id>
<label>DebugLog</label>
<arguments>
<parameter type="" name="reason">Reason</parameter>
<parameter type="" name="msg">Message</parameter>
</arguments>
<code>Public  DebugLog(System.String,System.Object)</code>
<comments><![CDATA[The method is not supported by the class.]]></comments>
<exception type="System.NotImplementedException">The exception is always returned by the method.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.DebugLogP</id>
<label>DebugLogP</label>
<code>Public  DebugLogP()</code>
<comments><![CDATA[The method is not supported by the class.]]></comments>
<exception type="System.NotImplementedException">The exception is always returned by the method.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.DownloadFile(Aras.IOM.Item,System.String,System.Boolean)</id>
<label>DownloadFile</label>
<arguments>
<parameter type="" name="fileItem"></parameter>
<parameter type="" name="fileName"></parameter>
<parameter type="" name="overwrite"></parameter>
</arguments>
<code>Public  DownloadFile(Aras.IOM.Item,System.String,System.Boolean)</code>
<comments><![CDATA[Downloads the specified physical file to the specified directory.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.Equals(System.Object)</id>
<label>Equals</label>
<arguments>
<parameter type="" name="obj"></parameter>
</arguments>
<code>Public  Equals(System.Object)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.GetDatabaseName</id>
<label>GetDatabaseName</label>
<code>Public  GetDatabaseName()</code>
<comments><![CDATA[Returns name of the current database in use.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.GetDatabases</id>
<label>GetDatabases</label>
<code>Public  GetDatabases()</code>
<comments><![CDATA[Returns all configured databases]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.getFileUrl(System.String,Aras.IOM.UrlType)</id>
<label>getFileUrl</label>
<arguments>
<parameter type="" name="fileId"></parameter>
<parameter type="" name="type"></parameter>
</arguments>
<code>Public  getFileUrl(System.String,Aras.IOM.UrlType)</code>
<comments><![CDATA[Returns file full file url. In some cases with AuthenticationBroker's token.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.getFileUrls(System.Collections.ArrayList,Aras.IOM.UrlType)</id>
<label>getFileUrls</label>
<arguments>
<parameter type="" name="fileIds"></parameter>
<parameter type="" name="type"></parameter>
</arguments>
<code>Public  getFileUrls(System.Collections.ArrayList,Aras.IOM.UrlType)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.GetFromCache(System.String)</id>
<label>GetFromCache</label>
<arguments>
<parameter type="" name="key"></parameter>
</arguments>
<code>Public  GetFromCache(System.String)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetHashCode</id>
<label>GetHashCode</label>
<code>Public  GetHashCode()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.HttpServerConnection.GetLicenseInfo</id>
<label>GetLicenseInfo</label>
<code>Overload:Aras.IOM.HttpServerConnection.GetLicenseInfo</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.GetLicenseInfo(System.String,System.String)</id>
<label>GetLicenseInfo</label>
<arguments>
<parameter type="" name="issuer">Select addons by issuer. Skip if null or empty.</parameter>
<parameter type="" name="addonName">Select add-ons by the add-on name. Skip if null or empty.</parameter>
</arguments>
<returns>subscription info with add-ons in xml format, null if failed</returns>
<code>Public  GetLicenseInfo(System.String,System.String)</code>
<comments><![CDATA[Returns information about subscription and specified add-on's]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.GetLicenseInfo</id>
<label>GetLicenseInfo</label>
<code>Public  GetLicenseInfo()</code>
<comments><![CDATA[Returns information about subscription and all add-on's]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.GetOperatingParameter(System.String,System.Object)</id>
<label>GetOperatingParameter</label>
<arguments>
<parameter type="" name="name">Server operating parameter.</parameter>
<parameter type="" name="defaultvalue">Default value of the parameter.</parameter>
</arguments>
<returns>The default value passed to the method.</returns>
<code>Public  GetOperatingParameter(System.String,System.Object)</code>
<comments><![CDATA[The method is not supported by the class.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.GetSrvContext</id>
<label>GetSrvContext</label>
<returns><c>null</c></returns>
<code>Public  GetSrvContext()</code>
<comments><![CDATA[The method is not supported by the class.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetType</id>
<label>GetType</label>
<code>Public  GetType()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.getUserID</id>
<label>getUserID</label>
<returns>User ID</returns>
<code>Public  getUserID()</code>
<comments><![CDATA[If Login() was already called, returns id of the user assosiated with the connection; otherwise throws an exception.]]></comments>
<exception type="System.Exception">Login() was not called prior to this call.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.getUserInfo</id>
<label>getUserInfo</label>
<code>Public  getUserInfo()</code>
<comments><![CDATA[Returns result of the request for user’s info cached during the login]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.GetValidateUserXmlResult</id>
<label>GetValidateUserXmlResult</label>
<code>Public  GetValidateUserXmlResult()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.InsertIntoCache(System.String,System.Object,System.String)</id>
<label>InsertIntoCache</label>
<arguments>
<parameter type="" name="key"></parameter>
<parameter type="" name="value"></parameter>
<parameter type="" name="path"></parameter>
</arguments>
<code>Public  InsertIntoCache(System.String,System.Object,System.String)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.Login</id>
<label>Login</label>
<returns>"error" item if login failed; otherwise item representing logged-in user.</returns>
<code>Public  Login()</code>
<comments><![CDATA[Login into Innovator server.]]></comments>
<remarks><![CDATA[Sends a login request to the Innovator server using properties (URL, db, user name, etc.) of the instance. It's strongly recommended to call Login() before calling any other IOM method that sends a request to the Innovator server as in case the Innovator server is configured with security settings (session timeout, etc.) an attempt to send a request to server without prior login causes an exception.]]></remarks>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.HttpServerConnection.Logout</id>
<label>Logout</label>
<code>Overload:Aras.IOM.HttpServerConnection.Logout</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.Logout(System.Boolean)</id>
<label>Logout</label>
<arguments>
<parameter type="" name="unlockOnLogout">Pass 'true' if want to unlock locked objects on logout; 'false' otherwise</parameter>
</arguments>
<code>Public  Logout(System.Boolean)</code>
<comments><![CDATA[Logout from Innovator.]]></comments>
<remarks><![CDATA[Note that items can be unlocked on logout if and only if the property "unlock_on_logout" of the item's corresponding ItemType is set to "1". If this property is set to "0" the parameter "unlockOnLogout" is ignored.]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.Logout</id>
<label>Logout</label>
<code>Public  Logout()</code>
<comments><![CDATA[Logout from Innovator (do not unlock locked Items).]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.ToString</id>
<label>ToString</label>
<code>Public  ToString()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.UsingParameters(Aras.IOM.HttpConnectionParameters,System.Action)</id>
<label>UsingParameters</label>
<arguments>
<parameter type="" name="parameters"></parameter>
<parameter type="" name="action"></parameter>
</arguments>
<code>Public  UsingParameters(Aras.IOM.HttpConnectionParameters,System.Action)</code>
<comments><![CDATA[Call action with special HttpConnectionParams]]></comments>
</Item>
<Item type="HelpItem">
<id>P:Aras.IOM.HttpServerConnection.Compression</id>
<label>Compression</label>
<code>Public  Compression</code>
<comments><![CDATA[Property specifies the way of compression of AML sent through IOM.HttpServerConnection. Value from enumeration 'CompressionType' (namespace Aras.Common.Compression) can be set. Available values are: gzip data compression to the gzip format deflate data compression to the deflate format none Default value. Data sent through IOM.HttpServerConnection aren't compressed. It is highly recommended to store type of compression you are using in configuration file of your application. Example section of application configuration file: <configuration> <appSettings> <add key="CompressionType" value="gzip"/> </appSettings > </configuration> Examples of setting value of Compression property from application configuration file. ... HttpServerConnection connection = CreateHttpServerConnection("innovatorServerUrl"); connaction.Compression = GetCompressionTypeFromAppConfig(); ... private CompressionType GetCompressionTypeFromAppConfig() { string value = ConfigurationManager.AppSettings["CompressionType"]; if (String.IsNullOrEmpty(value)) { return CompressionType.none; } else { return (CompressionType)Enum.Parse(typeof(CompressionType), value); } } ... Dim connection As HttpServerConnection = IomFactory.CreateHttpServerConnection("connectionstring") connection.Compression = GetCompressionTypeFromAppConfig() ... Private Function GetCompressionTypeFromAppConfig() As CompressionType Dim value As String = ConfigurationManager.AppSettings("CompressionType") If (String.IsNullOrEmpty(value)) Then Return CompressionType.none Else Return CType([Enum].Parse(GetType(CompressionType), value), CompressionType) End If End Function]]></comments>
</Item>
<Item type="HelpItem">
<id>P:Aras.IOM.HttpServerConnection.ReadWriteTimeout</id>
<label>ReadWriteTimeout</label>
<code>Public  ReadWriteTimeout</code>
<comments><![CDATA[Gets or sets a time-out in milliseconds when writing to or reading from a stream.]]></comments>
<exception type="System.ArgumentOutOfRangeException"> The value specified for a set operation is less than zero and is not equal to System.Threading.Timeout.Infinite </exception>
</Item>
<Item type="HelpItem">
<id>P:Aras.IOM.HttpServerConnection.Timeout</id>
<label>Timeout</label>
<code>Public  Timeout</code>
<comments><![CDATA[Gets or sets the time-out value in milliseconds for the System.Net.HttpWebRequest.GetResponse() and System.Net.HttpWebRequest.GetRequestStream() methods.]]></comments>
<exception type="System.ArgumentOutOfRangeException"> The value specified is less than zero and is not System.Threading.Timeout.Infinite. </exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.I18NSessionContext.ConvertFromNeutral(System.String,System.String,System.String)</id>
<label>ConvertFromNeutral</label>
<arguments>
<parameter type="" name="svalue">Locale specific string representation of a value that has to be converted.</parameter>
<parameter type="" name="vtype">Type of the value; only the following types are considered to be locale specific - 'date' | 'float' | 'decimal'</parameter>
<parameter type="" name="datePtrn">The parameter is taken into consideration only if vtype='date'. In this case the parameter can have one the following values: short_datelong_dateshort_date_timelong_date_timeshort_timelong_time</parameter>
</arguments>
<returns>Locale specific string representation of the <c>svalue</c>.</returns>
<code>Public  ConvertFromNeutral(System.String,System.String,System.String)</code>
<comments><![CDATA[Converts from neutral format into the format specific for the session locale.]]></comments>
<exception type="System.FormatException">svalue does not contain a valid string representation of the type defined by the vtype</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.I18NSessionContext.ConvertNeutralToUtcDateTime(System.String,System.String)</id>
<label>ConvertNeutralToUtcDateTime</label>
<arguments>
<parameter type="" name="neutralStr">A string that represent a date-time in the time zone of the session in neutral format.</parameter>
<parameter type="" name="outPattern">Invariant culture date time format.</parameter>
</arguments>
<returns>The convertation result.</returns>
<code>Public  ConvertNeutralToUtcDateTime(System.String,System.String)</code>
<comments><![CDATA[Converts a date-time in the time zone of the session in neutral format to a string that represents the same moment of time in UTC.]]></comments>
<exception type="System.ArgumentOutOfRangeException">No time zones with name=the session time zone name found</exception>
<exception type="System.FormatException">inPattern supposes time offset</exception>
<exception type="System.FormatException">neutralStr is not in neutral format</exception>
<exception type="System.NotSupportedException">The method is running on not supported platform</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.I18NSessionContext.ConvertToNeutral(System.String,System.String,System.String)</id>
<label>ConvertToNeutral</label>
<arguments>
<parameter type="" name="svalue">Locale specific string representation of a value that has to be converted.</parameter>
<parameter type="" name="vtype">Type of the value; only the following types are considered to be locale specific - 'date' | 'float' | 'decimal'</parameter>
<parameter type="" name="datePtrn">The parameter is taken into consideration only if vtype='date'. In this case user can specify the exact format that is used in the string representation of a date in svalue. In case vtype='date' but the parameter is not specified or passed as null or empty string then an attempt is made to parse the svalue assuming that it has a valid format for the session locale.</parameter>
</arguments>
<code>Public  ConvertToNeutral(System.String,System.String,System.String)</code>
<comments><![CDATA[Convert svalue that is a string representation of value of type vtype into the neutral format. It is assumed that svalue has a format that is a valid format for the session locale.]]></comments>
<remarks><![CDATA[Note that in case vtype='date' and svalue contails time zone offset (e.g. "2008-10-22T16:20:00-0500") the svalue represents a concrete moment of time which is different from the case when svalue doesn't have an offset (e.g. "2008-10-22T16:20:00") because "no offset" value can be interpreted as different moments of time depending of the time zone in which the value is processed. If svalue doesn't have an offset it's interpreted as the date-time in the time zone of the session. If svalue has an offset (i.e. it represents a concrete moment of time) it's represented as the same moment of time in the time zone of the session. For instance, if time zone of the session is "Eastern Standard Time" and svalue is "2008-12-25T18:25:00+0100" then the methods returns "2008-12-25T12:25:00".]]></remarks>
<exception type="System.FormatException">svalue does not contain a valid string representation of the type defined by the vtype</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.I18NSessionContext.ConvertUtcDateTimeToNeutral(System.String,System.String)</id>
<label>ConvertUtcDateTimeToNeutral</label>
<arguments>
<parameter type="" name="utcStr">If utcStr doesn't have an offset it's interpreted as UTC date/time; i.e. as it would have offset +0000. If the parameter has an offset then it's interpreted as the exact moment of time that is specified by the parameter.</parameter>
<parameter type="" name="inPattern">Invariant culture date time format.</parameter>
</arguments>
<returns>The convertation result.</returns>
<code>Public  ConvertUtcDateTimeToNeutral(System.String,System.String)</code>
<comments><![CDATA[Converts utcStr date to string representing the same moment of time in the time zone of the session in neutral format.]]></comments>
<exception type="System.ArgumentOutOfRangeException">No time zones with name=the session time zone name found</exception>
<exception type="System.FormatException">utcStr does not contain a valid string representation of the type defined by the inPattern</exception>
<exception type="System.NotSupportedException">The method is running on not supported platform</exception>
</Item>
<Item type="HelpItem">
<id>M:System.Object.Equals(System.Object)</id>
<label>Equals</label>
<arguments>
<parameter type="" name="obj"></parameter>
</arguments>
<code>Public  Equals(System.Object)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.I18NSessionContext.GetCorporateToLocalOffset</id>
<label>GetCorporateToLocalOffset</label>
<returns>Offset in minutes</returns>
<code>Public  GetCorporateToLocalOffset()</code>
<comments><![CDATA[Returns offset in minutes between corporate time zone and the local time zone of the client. If the corporate time zone is not defined by the Innovator then '0' is returned.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.I18NSessionContext.GetDefaultLanguageCode</id>
<label>GetDefaultLanguageCode</label>
<returns>Language code, e.g. "en"</returns>
<code>Public  GetDefaultLanguageCode()</code>
<comments><![CDATA[Returns code of the default language.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.I18NSessionContext.GetDefaultLanguageSuffix</id>
<label>GetDefaultLanguageSuffix</label>
<returns>Language suffix, e.g. "_en"</returns>
<code>Public  GetDefaultLanguageSuffix()</code>
<comments><![CDATA[Returns suffix of the default language.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetHashCode</id>
<label>GetHashCode</label>
<code>Public  GetHashCode()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.I18NSessionContext.GetLanguageCode</id>
<label>GetLanguageCode</label>
<returns>Language code, e.g. "en"</returns>
<code>Public  GetLanguageCode()</code>
<comments><![CDATA[Returns Innovator language code for the session language.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.I18NSessionContext.GetLanguageSuffix</id>
<label>GetLanguageSuffix</label>
<returns>Language suffix, e.g. "_en"</returns>
<code>Public  GetLanguageSuffix()</code>
<comments><![CDATA[Returns suffix of the language for the session language.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.I18NSessionContext.GetLocale</id>
<label>GetLocale</label>
<returns>Locale, e.g. "en-US"</returns>
<code>Public  GetLocale()</code>
<comments><![CDATA[Returns locale of the current session.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.I18NSessionContext.GetTimeZone</id>
<label>GetTimeZone</label>
<returns>Time zone, e.g. "US Eastern Standard Time". The value is one of keys from the registry entry: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones</returns>
<code>Public  GetTimeZone()</code>
<comments><![CDATA[Returns time zone of the session.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetType</id>
<label>GetType</label>
<code>Public  GetType()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.I18NSessionContext.GetUIDatePattern(System.String)</id>
<label>GetUIDatePattern</label>
<arguments>
<parameter type="" name="innovatorDatePattern">One of possible values: short_datelong_dateshort_date_timelong_date_timeshort_timelong_time</parameter>
</arguments>
<returns>Date-time pattern, e.g. "yyyy-MM-dd"</returns>
<code>Public  GetUIDatePattern(System.String)</code>
<comments><![CDATA[Returns locale specific date-time pattern that corresponds to the passed Innovator pattern (e.g. 'short_date').]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.ToString</id>
<label>ToString</label>
<code>Public  ToString()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.applyAML(System.String)</id>
<label>applyAML</label>
<arguments>
<parameter type="" name="AML">AML script to be sent to Innovator server.</parameter>
</arguments>
<returns>Server response.</returns>
<code>Public  applyAML(System.String)</code>
<comments><![CDATA[Sends request to Innovator server and returns server response as an item.]]></comments>
<remarks><![CDATA[It's assumed that passed AML script has a root tag <AML> that contains one or more <Item> children elements. The method send the AML script to the server and returns an Item object where the dom property is the xml response returned from the server. ]]></remarks>
<exception type="System.Xml.XmlException">There is a load or parse error in the AML.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.applyMethod(System.String,System.String)</id>
<label>applyMethod</label>
<arguments>
<parameter type="" name="methodName">Name of the method.</parameter>
<parameter type="" name="body">Context for the method (method item).</parameter>
</arguments>
<code>Public  applyMethod(System.String,System.String)</code>
<comments><![CDATA[Apply a method by name, passing a string value as its body.]]></comments>
<remarks><![CDATA[The context for the method will be the method item, in the form: <Item type="Method" action="{methodName}">{body}</Item> Note, that only methods that use IOM namespace from .NET (C#, VBScript) can be applied, and methods written in JavaScript cannot be applied.]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.applySQL(System.String)</id>
<label>applySQL</label>
<arguments>
<parameter type="" name="sql">SQL to be sent to Innovator server.</parameter>
</arguments>
<returns>Server response.</returns>
<code>Public  applySQL(System.String)</code>
<comments><![CDATA[Sends SQL request to Innovator server and returns server response as an Item.]]></comments>
<remarks><![CDATA[Uses "ApplySQL" type of server request. In the returned Item object the dom property is the XML returned from the server. ]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.calcMD5(System.String)</id>
<label>calcMD5</label>
<arguments>
<parameter type="" name="val"></parameter>
</arguments>
<returns>MD5 hash value.</returns>
<code>Public  calcMD5(System.String)</code>
<comments><![CDATA[Computes the MD5 hash value for the specified string.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.ConsumeLicense(System.String)</id>
<label>ConsumeLicense</label>
<arguments>
<parameter type="" name="featureName">the name on the feature</parameter>
</arguments>
<returns>Returns id of consumed license</returns>
<code>Public  ConsumeLicense(System.String)</code>
<comments><![CDATA[Consumes license for feature]]></comments>
<example><![CDATA[
             ...
             HttpServerConnection connection = IomFactory.CreateHttpServerConnection(innovatorServerUrl, database, userName, password);
             connection.Login();
             Innovator inn = IomFactory.CreateInnovator(connection);
             try
             {
               string featureId = inn.ConsumeLicense("featureName");
             }
             finally
             {
               connection.Logout();
             }
             ...
             
             ...
             IOM::IHttpServerConnectionComIncomingPtr connection = iomFactory->CreateHttpServerConnection(innovatorServerUrl, database, userName, password);
             connection->Login();
             IOM::IInnovatorComIncomingPtr innovator = iomFactory->CreateInnovator(connection);
             _bstr_t a = innovatorAdmin->ConsumeLicense("featureName");
             connection->Logout();
            ...
            ]]></example>
</Item>
<Item type="HelpItem">
<id>M:System.Object.Equals(System.Object)</id>
<label>Equals</label>
<arguments>
<parameter type="" name="obj"></parameter>
</arguments>
<code>Public  Equals(System.Object)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.getAssignedActivities(System.String,System.String)</id>
<label>getAssignedActivities</label>
<arguments>
<parameter type="" name="state">InBaseket view mode; possible values - "Active" | "Pending" | "Both".</parameter>
<parameter type="" name="userId">User ID.</parameter>
</arguments>
<code>Public  getAssignedActivities(System.String,System.String)</code>
<comments><![CDATA[Returns an Item where the nodeList property of the Item contains Activity Items.]]></comments>
<remarks><![CDATA[The method sends a request to Innovator server to obtain activities.]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.getConnection</id>
<label>getConnection</label>
<returns>Server connection object that implements <c>IServerConnection</c> interface. The real type of the server connection object depends on what was passed to the <c>IomFactory.CreateInnovator(IServerConnection)</c> when the instance of the <c>Innovator</c> class was created.</returns>
<code>Public  getConnection()</code>
<comments><![CDATA[Returns the server connection set on the instance.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.getFileUrl(System.String,Aras.IOM.UrlType)</id>
<label>getFileUrl</label>
<arguments>
<parameter type="" name="fileId"></parameter>
<parameter type="" name="type"></parameter>
</arguments>
<code>Public  getFileUrl(System.String,Aras.IOM.UrlType)</code>
<comments><![CDATA[Returns file full file url. In some cases with AuthenticationBroker's token.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.getFileUrls(System.Collections.ArrayList,Aras.IOM.UrlType)</id>
<label>getFileUrls</label>
<arguments>
<parameter type="" name="fileIds"></parameter>
<parameter type="" name="type"></parameter>
</arguments>
<code>Public  getFileUrls(System.Collections.ArrayList,Aras.IOM.UrlType)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetHashCode</id>
<label>GetHashCode</label>
<code>Public  GetHashCode()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.getI18NSessionContext</id>
<label>getI18NSessionContext</label>
<returns>Current I18NSessionContext of the session.</returns>
<code>Public  getI18NSessionContext()</code>
<comments><![CDATA[Returns current internationalization context.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.getItemById(System.String,System.String)</id>
<label>getItemById</label>
<arguments>
<parameter type="" name="itemTypeName">Name of the ItemType.</parameter>
<parameter type="" name="id">Item's ID.</parameter>
</arguments>
<returns>If request to the server failed the method returns an "error" item; if no item with specified type and id found in the database the method returns 'null'; otherwise the method returns the found item.</returns>
<code>Public  getItemById(System.String,System.String)</code>
<comments><![CDATA[Returns an Item object that matches the ItemType name and ID for the Item.]]></comments>
<remarks><![CDATA[The method sends a request to Innovator server in order to find the required item.]]></remarks>
<example><![CDATA[ C# 
            ...
            string type = "Part";
            string id = "01234567890123456789012345678901";
            Item result = myInnovator.getItemById( type, id );
            string status_msg = string.Empty;
            if( result == null )
              status_msg = string.Format( "Item of type '{0}' with id '{1}' was not found", type, id );
            else if( result.isError() )
              status_msg =
                string.Format( "Request to find item of type '{0}' with id '{1}' has failed: {2}", type, id, result.getErrorDetail() );
            else
              status_msg = string.Format( "Item of type '{0}' with id '{1}' was successfully found", type, id );
            ...
            ]]></example>
<exception type="System.ArgumentException">&lt;li&gt; Item type is not specified. &lt;/li&gt;&lt;li&gt; Item ID is not specified. &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.getItemByKeyedName(System.String,System.String)</id>
<label>getItemByKeyedName</label>
<arguments>
<parameter type="" name="itemTypeName">Name of the ItemType.</parameter>
<parameter type="" name="keyedName">Keyed name for the searched item.</parameter>
</arguments>
<returns>If request to the server failed the method returns an "error" item; if no item with specified type and id found in the database the method returns 'null'; otherwise the method returns the found item.</returns>
<code>Public  getItemByKeyedName(System.String,System.String)</code>
<comments><![CDATA[Returns an Item object that matches the ItemType name and keyed name for the Item.]]></comments>
<remarks><![CDATA[The method sends a request to Innovator server in order to find the required item.]]></remarks>
<example><![CDATA[ C# 
            ...
            string type = "Part";
            string keyedName="part1";
            Item result = myInnovator.getItemByKeyedName( type, keyedName );
            string status_msg = string.Empty;
            if( result == null )
              status_msg = string.Format( "Item of type '{0}' with keyed name '{1}' was not found", type, keyedName );
            else if( result.isError() )
              status_msg = 
                string.Format( "Request to find item of type '{0}' with keyed name '{1}' has failed: {2}", type, keyedName, result.getErrorDetail() );
            else
              status_msg = string.Format( "Item of type '{0}' with keyed name '{1}' was successfully found", type, keyedName );
            ...
            ]]></example>
<exception type="System.ArgumentException">&lt;li&gt; Item type is not specified. &lt;/li&gt;&lt;li&gt; Keyed name is not specified. &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.getItemInDom(System.Xml.XmlDocument)</id>
<label>getItemInDom</label>
<arguments>
<parameter type="" name="dom">Instance of ArasXmlDocument.</parameter>
</arguments>
<returns><c>null</c> if passed ArasXmlDocument doesn't have an &lt;Item&gt; node; new Item otherwise.</returns>
<code>Public  getItemInDom(System.Xml.XmlDocument)</code>
<comments><![CDATA[Returns an Item with the node property referencing the first found <Item> node from the passed ArasXmlDocument.]]></comments>
<remarks><![CDATA[If passed ArasXmlDocument doesn't have an <Item> node the method returns null; otherwise OuterXml of the passed ArasXmlDocument is loaded into the item's dom.]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.getNewID</id>
<label>getNewID</label>
<returns>New GUID.</returns>
<code>Public  getNewID()</code>
<comments><![CDATA[A new 32 character hex string based on a GUID.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.getNextSequence(System.String)</id>
<label>getNextSequence</label>
<arguments>
<parameter type="" name="sequenceName">Sequence name.</parameter>
</arguments>
<returns>New sequence value if request to the server succeeded, <c>null</c> otherwise.</returns>
<code>Public  getNextSequence(System.String)</code>
<comments><![CDATA[Returns the next sequence value by sequence name.]]></comments>
<remarks><![CDATA[Method makes a request to Innovator server in order to get new sequence value.]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetType</id>
<label>GetType</label>
<code>Public  GetType()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.getUserAliases</id>
<label>getUserAliases</label>
<returns>Comma delimited string of Identity ID's; if request to the server failed or no aliases were found the return value is an empty string.</returns>
<code>Public  getUserAliases()</code>
<comments><![CDATA[Returns aliases of the logged-in user.]]></comments>
<remarks><![CDATA[The method makes a request to Innovator server to obtain aliases of the logged-in user. The return value is a comma delimited string of Identity ID's, which are 'Alias' relationships to the User Item.]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.getUserID</id>
<label>getUserID</label>
<returns>User id.</returns>
<code>Public  getUserID()</code>
<comments><![CDATA[Returns id of the user assosiated with a given instance of Innovator if this user is currently logged in, otherwise throws "Not logged in" exception.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.newError(System.String)</id>
<label>newError</label>
<arguments>
<parameter type="" name="explanation">Is used to populate the &lt;faultstring&gt; tag inside &lt;Fault&gt; node. According to the SOAP 1.1 specification the faultstring element is intended to provide a human readable explanation of the fault and is not intended for algorithmic processing. Note, that passed message is set as InnerText on the &lt;faultstring&gt; element without any pre-processing, so symbols like '&lt;', '&gt;', etc. will be escaped.</parameter>
</arguments>
<returns>Created "error" item.</returns>
<code>Public  newError(System.String)</code>
<comments><![CDATA[Returns a new "error" item.]]></comments>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Innovator.newItem</id>
<label>newItem</label>
<code>Overload:Aras.IOM.Innovator.newItem</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.newItem</id>
<label>newItem</label>
<returns>Newly created instance of Item.</returns>
<code>Public  newItem()</code>
<comments><![CDATA[Returns a new Item.]]></comments>
<remarks><![CDATA[The new Item will have no properties.]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.newItem(System.String)</id>
<label>newItem</label>
<arguments>
<parameter type="" name="itemTypeName">Name of the ItemType.</parameter>
</arguments>
<returns>Newly created instance of Item.</returns>
<code>Public  newItem(System.String)</code>
<comments><![CDATA[Returns a new Item with the specified type.]]></comments>
<remarks><![CDATA[The ItemType name is used to set the 'type' attribute. The new Item will have no properties. In order to populate it with default property values of its ItemType call Item.fetchDefaultPropertyValues(true) on the item. ]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.newItem(System.String,System.String)</id>
<label>newItem</label>
<arguments>
<parameter type="" name="itemTypeName">Name of the ItemType.</parameter>
<parameter type="" name="action">Name of action (e.g. "get", "update", etc.)</parameter>
</arguments>
<returns>Newly created instance of Item.</returns>
<code>Public  newItem(System.String,System.String)</code>
<comments><![CDATA[Returns a new Item with the specified type and action.]]></comments>
<remarks><![CDATA[The ItemType name is used to set the 'type' attribute and the action name is used to set the 'action' attribute on the Item. The new Item will have no properties. In order to populate it with default property values of its ItemType call Item.fetchDefaultPropertyValues(true) on the item. ]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.newResult(System.String)</id>
<label>newResult</label>
<arguments>
<parameter type="" name="text">Text to be set as the body for the &lt;Result&gt; tag.</parameter>
</arguments>
<returns>Created item.</returns>
<code>Public  newResult(System.String)</code>
<comments><![CDATA[Returns an Item where the text passed in as the argument is the body for the <Result> tag.]]></comments>
<remarks><![CDATA[After the insertion the method performs a verification that resulting AML is well-formed XML. If passed text contains any XML escape symbols it's user's responsibility to put the text inside a 'CDATA' block.]]></remarks>
<exception type="System.Xml.XmlException">Resulting AML is not well-formed XML.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.newXMLDocument</id>
<label>newXMLDocument</label>
<returns>Instance of System.Xml.ArasXmlDocument</returns>
<code>Public  newXMLDocument()</code>
<comments><![CDATA[Creates new ArasXmlDocument.]]></comments>
<remarks><![CDATA[Returned ArasXmlDocument has property PreserveWhitespace set to true.]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Innovator.ScalcMD5(System.String)</id>
<label>ScalcMD5</label>
<arguments>
<parameter type="" name="val">String to be encoded.</parameter>
</arguments>
<returns>MD5 hash value.</returns>
<code>Public  ScalcMD5(System.String)</code>
<comments><![CDATA[Computes the MD5 hash value for the specified string.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.ToString</id>
<label>ToString</label>
<code>Public  ToString()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.IomFactory.CreateCheckinManager</id>
<label>CreateCheckinManager</label>
<code>Overload:Aras.IOM.IomFactory.CreateCheckinManager</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.IomFactory.CreateCheckinManager(Aras.IOM.Item)</id>
<label>CreateCheckinManager</label>
<arguments>
<parameter type="" name="configuration">Configuration of items</parameter>
</arguments>
<code>Public  CreateCheckinManager(Aras.IOM.Item)</code>
<comments><![CDATA[Create]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.IomFactory.CreateCheckinManager(Aras.IOM.Item,Aras.IOME.CheckinManagerFlags)</id>
<label>CreateCheckinManager</label>
<arguments>
<parameter type="" name="configuration">structure for checkin</parameter>
<parameter type="" name="flags"></parameter>
</arguments>
<returns><see cref="T:Aras.IOME.CheckinManager" /></returns>
<code>Public  CreateCheckinManager(Aras.IOM.Item,Aras.IOME.CheckinManagerFlags)</code>
<comments><![CDATA[Create]]></comments>
<example><![CDATA[
            ...
            HttpServerConnection connection = CreateHttpServerConnection("innovatorServerUrl");
            Innovator innovator = IomFactory.CreateInnovator(connection);
            Item itm = innovator.newItem();
            itm.loadAML("<AML/>");
            CheckinManager checkin = factory.CreateCheckinManager(itm);
            ...
            
            ...
            IOM::IHttpServerConnectionComIncomingPtr connection = iomFactory->CreateHttpServerConnection(innovatorServerUrl, database, userName, password);
            connection->Login();
            IOM::IInnovatorComIncomingPtr innovator = iomFactory->CreateInnovator(connection);
            IOM::IItemComIncomingPtr configuration = innovator->newItem("CAD", "add");
            configuration->loadAML(aml);
            IOM::ICheckinManagerComIncomingPtr checkinManager = iomFactory->CreateCheckinManager(configuration);
            ...
            ]]></example>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.IomFactory.CreateCheckoutManager</id>
<label>CreateCheckoutManager</label>
<code>Overload:Aras.IOM.IomFactory.CreateCheckoutManager</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.IomFactory.CreateCheckoutManager(Aras.IOM.Item)</id>
<label>CreateCheckoutManager</label>
<arguments>
<parameter type="" name="configuration">Configuration of items</parameter>
</arguments>
<code>Public  CreateCheckoutManager(Aras.IOM.Item)</code>
<comments><![CDATA[Create]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.IomFactory.CreateCheckoutManager(Aras.IOM.Item,Aras.IOME.CheckoutManagerFlags)</id>
<label>CreateCheckoutManager</label>
<arguments>
<parameter type="" name="configuration">Configuration of items</parameter>
<parameter type="" name="flags"></parameter>
</arguments>
<code>Public  CreateCheckoutManager(Aras.IOM.Item,Aras.IOME.CheckoutManagerFlags)</code>
<comments><![CDATA[Create]]></comments>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.IomFactory.CreateHttpServerConnection</id>
<label>CreateHttpServerConnection</label>
<code>Overload:Aras.IOM.IomFactory.CreateHttpServerConnection</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.IomFactory.CreateHttpServerConnection(System.String,System.String,System.String,System.String)</id>
<label>CreateHttpServerConnection</label>
<arguments>
<parameter type="" name="innovatorServerUrl">URL of Innovator server in one of the following two forms: http://{host}/{base_URL}; e.g. http://devserver/MyInnovatorhttp://{host}/{base_URL}/Server/InnovatorServer.aspx; e.g. http://devserver/MyInnovator/Server/InnovatorServer.aspx</parameter>
<parameter type="" name="database">Name of database to be used in the session</parameter>
<parameter type="" name="userName">Login name of a user</parameter>
<parameter type="" name="password">User's password in either encrypted or non-encrypted form. NOTE: for encryption use .</parameter>
</arguments>
<code>Public  CreateHttpServerConnection(System.String,System.String,System.String,System.String)</code>
<comments><![CDATA[Create .]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.IomFactory.CreateHttpServerConnection(System.String)</id>
<label>CreateHttpServerConnection</label>
<arguments>
<parameter type="" name="innovatorServerUrl">URL of Innovator server in one of the following two forms: http://{host}/{base_URL}; e.g. http://devserver/MyInnovatorhttp://{host}/{base_URL}/Server/InnovatorServer.aspx; e.g. http://devserver/MyInnovator/Server/InnovatorServer.aspx</parameter>
</arguments>
<code>Public  CreateHttpServerConnection(System.String)</code>
<comments><![CDATA[Create restricted .]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.IomFactory.CreateInnovator(Aras.IOM.IServerConnection)</id>
<label>CreateInnovator</label>
<arguments>
<parameter type="" name="serverConnection"></parameter>
</arguments>
<code>Public  CreateInnovator(Aras.IOM.IServerConnection)</code>
<comments><![CDATA[Create instance and initialize that with the specified .]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.IomFactory.CreateMultiParentConfigurationBuilder(Aras.IOM.Item)</id>
<label>CreateMultiParentConfigurationBuilder</label>
<arguments>
<parameter type="" name="configuration">Configuration Item for CheckinManager</parameter>
</arguments>
<returns><see cref="T:Aras.IOME.MultiParentConfigurationBuilder" /></returns>
<code>Public  CreateMultiParentConfigurationBuilder(Aras.IOM.Item)</code>
<comments><![CDATA[Create]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.IomFactory.CreateWinAuthHttpServerConnection(System.String,System.String)</id>
<label>CreateWinAuthHttpServerConnection</label>
<arguments>
<parameter type="" name="innovatorServerUrl">URL of Innovator server in one of the following two forms: http://{host}/{base_URL}; e.g. http://devserver/MyInnovatorhttp://{host}/{base_URL}/Server/InnovatorServer.aspx; e.g. http://devserver/MyInnovator/Server/InnovatorServer.aspx</parameter>
<parameter type="" name="database">Name of database to be used in the session</parameter>
</arguments>
<returns>Instance of WinAuthHttpServerConnection class</returns>
<code>Public  CreateWinAuthHttpServerConnection(System.String,System.String)</code>
<comments><![CDATA[Create .]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.Equals(System.Object)</id>
<label>Equals</label>
<arguments>
<parameter type="" name="obj"></parameter>
</arguments>
<code>Public  Equals(System.Object)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetHashCode</id>
<label>GetHashCode</label>
<code>Public  GetHashCode()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetType</id>
<label>GetType</label>
<code>Public  GetType()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.ToString</id>
<label>ToString</label>
<code>Public  ToString()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>F:Aras.IOM.Item.XPathFault</id>
<label>XPathFault</label>
<code>Public  XPathFault</code>
<comments><![CDATA[XPath to the root <Fault> node in case the instance represents an "error" item. This field is read-only.]]></comments>
<remarks><![CDATA[It's recommended to use get\setErrorXXX() methods (e.g. getErrorDetails() or setErrorDetails(), etc.) in order to get\set fault information.  Note that this field is not available from JavaScript.]]></remarks>
<example><![CDATA[
              ...
              Item response = myitem.apply();
              if( response.isError() )
              {
                ArasXmlNode fault_node = response.dom.SelectNodes( Item.XPathFault );
                ...
              }
              ...
            ]]></example>
</Item>
<Item type="HelpItem">
<id>F:Aras.IOM.Item.XPathResult</id>
<label>XPathResult</label>
<code>Public  XPathResult</code>
<comments><![CDATA[XPath to the <Result> tag in server response XML. This field is read-only.]]></comments>
<remarks><![CDATA[Note that this field is not available from JavaScript. Use the string constant //Result instead.]]></remarks>
<example><![CDATA[
              ...
              Item response = myitem.apply();
              if( !response.isError() )
              {
                ArasXmlNode result_node = response.dom.SelectSingleNode( Item.XPathResult );
                ...
              }
              ...
            ]]></example>
</Item>
<Item type="HelpItem">
<id>F:Aras.IOM.Item.XPathResultItem</id>
<label>XPathResultItem</label>
<code>Public  XPathResultItem</code>
<comments><![CDATA[XPath to the top_level <Item> tag(s) in item's internal AML. This field is read-only.]]></comments>
<remarks><![CDATA[Note that this field is not available from JavaScript. Use the string constant //Result/Item instead.]]></remarks>
<example><![CDATA[
              ...
              Item response = myitem.apply();
              if( !response.isError() )
              {
                ArasXmlNodeList item_nodes = response.dom.SelectNodes( Item.XPathResultItem );
                ...
              }
              ...
            ]]></example>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.addRelationship(Aras.IOM.Item)</id>
<label>addRelationship</label>
<arguments>
<parameter type="" name="item">Items to be added to item's relationships.</parameter>
</arguments>
<code>Public  addRelationship(Aras.IOM.Item)</code>
<comments><![CDATA[Add specified item as a relationship item to the instance.]]></comments>
<remarks><![CDATA[No checking that passed item is a relationship of this is performed. The method just inserts passed item's node under 'Relationships' node inside this.node (if 'Relationships' node doesn't exist, it's created). After the method was called the item passed as argument to the method shares its dom with this (i.e. both items reference the same instance of ArasXmlDocument through their dom properties).]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The argument is not a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.appendItem(Aras.IOM.Item)</id>
<label>appendItem</label>
<arguments>
<parameter type="" name="item">Item to append</parameter>
</arguments>
<code>Public  appendItem(Aras.IOM.Item)</code>
<comments><![CDATA[Appends passed item to this.nodeList.]]></comments>
<remarks><![CDATA[The method works only if all nodes from this.nodeList (if available) and this.node are siblings; otherwise an exception is thrown. The method does the following: this.node != null: a) moves this.node into this.nodeList providing that all of them are siblings (this.node is set to null after that); b) appends passed item's node into this.nodeList; if passed item's node is not set (is null), appends to this.nodeList all nodes from passed item's nodeList. Note, that either passed item's node or nodeList is appended to this.nodeList, but not both. this.node == null AND this.nodeList != null: a) checks that all nodes in the this.nodeList  are siblings; b) appends passed item nodes to this.nodeList same way as in the case this.node != nullthis.node == null AND this.nodeList == null: throws an exception.  Note, that the item passed as the argument to the method is not changed in the method.]]></remarks>
<exception type="System.Exception">&lt;li&gt;this has invalid internal structure (e.g. this.node is from a different DOM then this.dom, etc.) &lt;/li&gt;&lt;li&gt;this.node is not a sibling with nodes from this.nodeList or (if this.node == null) not all nodes from this.nodeList are siblings. &lt;/li&gt;</exception>
<exception type="System.ArgumentException"> Passed item has invalid internal structure (e.g. item's node is from a different DOM then item's dom, etc.) </exception>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.apply</id>
<label>apply</label>
<code>Overload:Aras.IOM.Item.apply</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.apply(System.String)</id>
<label>apply</label>
<arguments>
<parameter type="" name="action">Action name. Overwrites current action set on the item. Note, that action can also be set when item is created or by Item.setAction(...) method. </parameter>
</arguments>
<returns>Returns an Item where the <c>dom</c> property is the XML returned from the server. The <c>dom</c> may contain an Item, a forest of Items (i.e. a disjoint union of AML trees), or an error.</returns>
<code>Public  apply(System.String)</code>
<comments><![CDATA[Sets action attribute on the item and applies the AML, which is the XML of this.dom.]]></comments>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The instance has a wrong internal structure (e.g. item.node doesn't belong to item.dom; etc.). &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.apply(System.Collections.Hashtable)</id>
<label>apply</label>
<arguments>
<parameter type="" name="argsObject">A collection of name-value pairs where 'name' is interpreted as 'property name' and 'value' as the property value. Specified in the collection properties are set on the item prior to applying its AML. </parameter>
</arguments>
<returns>Returns an Item where the <c>dom</c> property is the XML returned from the server. The <c>dom</c> may contain an Item, a forest of Items (i.e. a disjoint union of AML trees), or an error.</returns>
<code>Public  apply(System.Collections.Hashtable)</code>
<comments><![CDATA[Sets specified properties and applies the AML, which is the XML of this.dom.]]></comments>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The instance has a wrong internal structure (e.g. item.node doesn't belong to item.dom; etc.). &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.apply</id>
<label>apply</label>
<returns>Returns an Item where the <c>dom</c> property is the XML returned from the server. The <c>dom</c> may contain an Item, a forest of Items (i.e. a disjoint union of AML trees), or an error.</returns>
<code>Public  apply()</code>
<comments><![CDATA[Applies the AML, which is the XML of this.dom.]]></comments>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The instance has a wrong internal structure (e.g. item.node doesn't belong to item.dom; etc.). &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.apply(System.String,System.Collections.Hashtable)</id>
<label>apply</label>
<arguments>
<parameter type="" name="action">Action name. Overwrites current action set on the item. Note, that action can also be set when item is created or by Item.setAction(...) method. </parameter>
<parameter type="" name="argsObject">A collection of name-value pairs where 'name' is interpreted as 'property name' and 'value' as the property value. Specified in the collection properties are set on the item prior to applying its AML. </parameter>
</arguments>
<returns>Returns an Item where the <c>dom</c> property is the XML returned from the server. The <c>dom</c> may contain an Item, a forest of Items (i.e. a disjoint union of AML trees), or an error.</returns>
<code>Public  apply(System.String,System.Collections.Hashtable)</code>
<comments><![CDATA[Sets action attribute on the item; sets specified properties and applies the AML, which is the XML of this.dom.]]></comments>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The instance has a wrong internal structure (e.g. item.node doesn't belong to item.dom; etc.). &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.apply(System.String,System.Collections.Hashtable,System.String)</id>
<label>apply</label>
<arguments>
<parameter type="" name="action">The action argument is optional and if passed is assigned to the action attribute. The action can be assigned when the Item was created or by the setAction() method.</parameter>
<parameter type="" name="argsObject">A collection of name-value pairs where 'name' is interpreted as 'property name' and 'value' as the property value. Specified in the collection properties are set on the item prior to applying its AML. </parameter>
<parameter type="" name="location">The location argument value is either client or server and is only meaningful on the client side. The location is optional and defaults to server. If location is client the Method specified by the action attribute value is loaded into the client and is evaluated as an anonymous function for the Item object so the code is evaluated with the context object.</parameter>
</arguments>
<returns>Returns an Item where the dom property is the XML returned from the server. The dom may contain an Item, a forest of Items (i.e. a disjoint union of AML trees), or an Error.</returns>
<code>Public  apply(System.String,System.Collections.Hashtable,System.String)</code>
<comments><![CDATA[Applies the AML, which is the XML of 'this.dom'.]]></comments>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The instance has a wrong internal structure (e.g. item.node doesn't belong to item.dom; etc.). &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.applyStylesheet(System.String,System.String)</id>
<label>applyStylesheet</label>
<arguments>
<parameter type="" name="xslStylesheet">If type='text' then it's XML text for the stylesheet; if type='url' then it's URL of a stylesheet file.</parameter>
<parameter type="" name="type">The type argument is either 'text' or a 'url' (case insensitive).</parameter>
</arguments>
<returns>String that represents XML of the item's DOM after XSL transformation.</returns>
<code>Public  applyStylesheet(System.String,System.String)</code>
<comments><![CDATA[Performs XSL transformation of the item's DOM and returns the result of the transformation. IMPORTANT: Be very carefull when using slylesheets from untrusted urls, there's a possibility to use scripts in the stylesheets with the code that can cause damage. Make sure that the stylesheet doesn't contain intrader's script code before using.]]></comments>
<remarks><![CDATA[ If type='url' the xslStylesheet argument is interpreted as file URL. It means that user can pass to the method URLs like: "http://localhost/mystylesheets/stylesheet1.xslt" or "file:///c:/tmp/stylesheet2.xslt"; or absolute or relative path to the file, e.g. "c:/tmp/stylesheet2.xslt" or "../../stylesheet3.xslt".  The item itself is not modified by the method. ]]></remarks>
<exception type="System.Xml.XmlException">Failed to load the xsl.</exception>
<exception type="System.Xml.Xsl.XsltCompileException">Specified xsl does not conform to a valid stylesheet.</exception>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.attachPhysicalFile</id>
<label>attachPhysicalFile</label>
<code>Overload:Aras.IOM.Item.attachPhysicalFile</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.attachPhysicalFile(System.String)</id>
<label>attachPhysicalFile</label>
<arguments>
<parameter type="" name="filePath">Path to the physical file.</parameter>
</arguments>
<code>Public  attachPhysicalFile(System.String)</code>
<comments><![CDATA[Attach physical file to the item. Calling the method means that the physical will be streamed to the server when apply() is called on the item.]]></comments>
<remarks><![CDATA[The method could only be called on client side and for items of type 'File'. User can pass to the method either absolute or relative path to a physical file. Relative path information is interpreted as relative to the current working directory (i.e. location of the client executable). It's possible to attach to the item a physical file with a name different than the value of item's property filename - in this case the file stored in vault will still have name and type equal to values of filename and file_type properties correspondingly. Note, that if physical file was moved or deleted between calls to this method and Item.apply(), the later operation would fail.]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; Item is not of type 'File'. &lt;/li&gt;&lt;li&gt; Item doesn't have ID set. &lt;/li&gt;&lt;li&gt; Failed to obtain user's default vault ID. &lt;/li&gt;</exception>
<exception type="System.ArgumentException">Specified file was not found.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.attachPhysicalFile(System.String,System.String)</id>
<label>attachPhysicalFile</label>
<arguments>
<parameter type="" name="filePath">Path to the physical file.</parameter>
<parameter type="" name="vaultServerId">Vault server id.</parameter>
</arguments>
<code>Public  attachPhysicalFile(System.String,System.String)</code>
<comments><![CDATA[Attach physical file to the item. Calling the method means that the physical will be streamed to the server when apply() is called on the item.]]></comments>
<remarks><![CDATA[The method could only be called on client side and for items of type 'File'. User can pass to the method either absolute or relative path to a physical file. Relative path information is interpreted as relative to the current working directory (i.e. location of the client executable). It's possible to attach to the item a physical file with a name different than the value of item's property filename - in this case the file stored in vault will still have name and type equal to values of filename and file_type properties correspondingly. Note, that if physical file was moved or deleted between calls to this method and Item.apply(), the later operation would fail.]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; Item is not of type 'File'. &lt;/li&gt;&lt;li&gt; Item doesn't have ID set. &lt;/li&gt;&lt;li&gt; Vault server ID is not set. &lt;/li&gt;</exception>
<exception type="System.ArgumentException">Specified file was not found.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.cancelWorkflow</id>
<label>cancelWorkflow</label>
<code>Public  cancelWorkflow()</code>
<comments><![CDATA[Cancels the workflow process. Item's type must be "Workflow Process".]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.checkout(System.String)</id>
<label>checkout</label>
<arguments>
<parameter type="" name="dir">Path to the directory to which the file will be checked out. The path can be either relative to the location of the client executable or absolute.</parameter>
</arguments>
<returns>If checkout has failed the method returns an "error" item; otherwise <c>this</c> is returned.</returns>
<code>Public  checkout(System.String)</code>
<comments><![CDATA[Checkout physical file from the vault to the specified local directory.]]></comments>
<remarks><![CDATA[There are several rules about how the method could be used: a) the method could be invoked only on client; b) it's assumed that the item is of type 'File'; c) the item must have property 'filename' set. It's possible to checkout the same file multiple times. If the same file is downloaded into the same directory more than once, latest version of the file overwrites the previous one. If checkout succeeded, the method sets property 'checkedout_path' to the full path of the checked out file (this is only the run-time setting, so no update will be done in the corresponding File's record in the Innovator database.) If physical file of the item was checked out it doesn't mean that it will be send back to the server when the item is applied. In order to check-in physical file back to the server one should call attachPhysicalFile on the item prior to calling apply on it or its parent item.]]></remarks>
<example><![CDATA[ C# 
            ...
            Item files = myItem.getItemsByXPath( "/Item[@type='File']" );
            int fcount = files.getItemCount();
            for( int i = 0; i < fcount; i++ )
            {
              Item file = files.getItemByIndex( i );
              Item result = file.checkout( "c:\\temp" );
              if( result.isError() )
              {
                Console.WriteLine( string.Format( "Failed to checkout file '{0}'", file.getProperty( "filename" ) ) );
              }
            }
            ...
            ]]></example>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; Item is not of type 'File'. &lt;/li&gt;&lt;li&gt; Item doesn't have ID set. &lt;/li&gt;&lt;li&gt; The item was never stored on server (i.e. has 'isNew' attribute set to '1'). &lt;/li&gt;</exception>
<exception type="System.IO.IOException">File download failed.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.clone(System.Boolean)</id>
<label>clone</label>
<arguments>
<parameter type="" name="cloneRelationships">If true, all relationships of the item are cloned as well.</parameter>
</arguments>
<returns>Cloned item.</returns>
<code>Public  clone(System.Boolean)</code>
<comments><![CDATA[Clones the item.]]></comments>
<remarks><![CDATA[The method creates a new instance of ArasXmlDocument that is referenced by the cloned item's dom and is populated by xml of this.node. Cloned item as well as cloned relationships have new IDs and action attributes set to 'add'.]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">this.node or some of its children nodes are read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.closeWorkflow</id>
<label>closeWorkflow</label>
<code>Public  closeWorkflow()</code>
<comments><![CDATA[Closes the workflow process. Item's type must be "Workflow Process".]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.createPropertyItem(System.String,System.String,System.String)</id>
<label>createPropertyItem</label>
<arguments>
<parameter type="" name="propName">Name of property.</parameter>
<parameter type="" name="type">Type of the item property.</parameter>
<parameter type="" name="action">Name of the action that will be set on the item property.</parameter>
</arguments>
<returns>Created item with the specified type and action.</returns>
<code>Public  createPropertyItem(System.String,System.String,System.String)</code>
<comments><![CDATA[Creates an item with the specified type and action and sets it as the specified property of this item.]]></comments>
<remarks><![CDATA[Returned item shares dom property with this item (i.e. both returned item's and this item's dom reference the same instance of ArasXmlDocument). The method is similar to setPropertyItem(propName, item) except that setPropertyItem(propName, item) gets an item as the method argument and doesn't create it internally. ]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The instance has a wrong internal structure (e.g. item.node doesn't belong to item.dom; etc.). &lt;/li&gt;</exception>
<exception type="System.ArgumentException">Property node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.createRelatedItem(System.String,System.String)</id>
<label>createRelatedItem</label>
<arguments>
<parameter type="" name="type">Type of the related item.</parameter>
<parameter type="" name="action">Name of the action that will be set on created related item.</parameter>
</arguments>
<returns>Created related item with specified type and action.</returns>
<code>Public  createRelatedItem(System.String,System.String)</code>
<comments><![CDATA[Creates an item with the specified type and action and sets it as the related item on this item.]]></comments>
<remarks><![CDATA[If property related_id doesn't exist on this item, it's created. Returned item shares dom property with this item (i.e. both returned item's and this item's dom reference the same instance of ArasXmlDocument). The method is similar to setRelatedItem(Item) except that setRelatedItem(Item) gets related item as method argument and doesn't create it internally. ]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The instance has a wrong internal structure (e.g. item.node doesn't belong to item.dom; etc.). &lt;/li&gt;</exception>
<exception type="System.ArgumentException">'related_id' node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.createRelationship(System.String,System.String)</id>
<label>createRelationship</label>
<arguments>
<parameter type="" name="type">Value of attribute 'type' that will be set on the created &lt;Item&gt; node.</parameter>
<parameter type="" name="action">Value of attribute 'action' that will be set on the created &lt;Item&gt; node.</parameter>
</arguments>
<returns>Item that reference newly created &lt;Item&gt; node. Returned item shares it's DOM with <c>this</c> item, i.e. both items reference the same instance of ArasXmlDocument throught their <c>dom</c> properties.</returns>
<code>Public  createRelationship(System.String,System.String)</code>
<comments><![CDATA[Creates new <Item> node with specified 'type' and 'action' under <Relationships> node inside this.node.]]></comments>
<remarks><![CDATA[If <Relationships> node doesn't exist inside this.node, it's created.]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The instance has a wrong internal structure (e.g. item.node doesn't belong to item.dom; etc.). &lt;/li&gt;</exception>
<exception type="System.ArgumentException">'Relationships' node being updated is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.email(Aras.IOM.Item,Aras.IOM.Item)</id>
<label>email</label>
<arguments>
<parameter type="" name="emailItem">Item of type "EMail Message"</parameter>
<parameter type="" name="identityItem">Item of type "Identity"</parameter>
</arguments>
<returns>'true' if mail was successfully sent, 'false' otherwise</returns>
<code>Public  email(Aras.IOM.Item,Aras.IOM.Item)</code>
<comments><![CDATA[Send e-mail to the specified identity. In order to do so, the method sends a special request to the Innovator server.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:System.Object.Equals(System.Object)</id>
<label>Equals</label>
<arguments>
<parameter type="" name="obj"></parameter>
</arguments>
<code>Public  Equals(System.Object)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.fetchDefaultPropertyValues(System.Boolean)</id>
<label>fetchDefaultPropertyValues</label>
<arguments>
<parameter type="" name="overwrite_current">If 'true', overwrite existing property values.</parameter>
</arguments>
<returns>If fetching failed, returns "error" item that contains information about the failure. Otherwise, returns <c>this</c> with set property values.</returns>
<code>Public  fetchDefaultPropertyValues(System.Boolean)</code>
<comments><![CDATA[Fetches from server default values for all properties of the item's ItemType and sets them on the item.]]></comments>
<remarks><![CDATA[If a property doesn't have a default value, the property is not set.]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The item doesn't have attribute 'type' set. &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.fetchFileProperty(System.String,System.String,Aras.IOM.FetchFileMode)</id>
<label>fetchFileProperty</label>
<arguments>
<parameter type="" name="propertyName">Name of property of type File for which physical file needs to be downloaded</parameter>
<parameter type="" name="targetPath">Path to folder or file to which physical file should be downloaded. Here is examples of possible values: - Folder path, example: C:/temp/ - Full file path, example: C:/temp/1.txt</parameter>
<parameter type="" name="mode">Responsible for reflecting in which mode operation should be completed. </parameter>
</arguments>
<returns>Item of type File. Property "checkedout_path" of item will be populated by the path to which file was downloaded.</returns>
<code>Public  fetchFileProperty(System.String,System.String,Aras.IOM.FetchFileMode)</code>
<comments><![CDATA[Downloads a file to target path.]]></comments>
<exception type="System.ArgumentNullException">&lt;li&gt; Agrument "propertyName" is null or empty. &lt;/li&gt;&lt;li&gt; Agrument "targetPath" is null or empty. &lt;/li&gt;</exception>
<exception type="System.ArgumentException">&lt;li&gt; Agrument "mode" is not a part of FetchFileMode enumeration. &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.fetchLockStatus</id>
<label>fetchLockStatus</label>
<returns><list type="bullet"><item><description> -1 - failed to fetch item's lock status from server </description></item><item><description> 0 not locked </description></item><item><description> 1 locked by user </description></item><item><description> 2 locked by other </description></item></list></returns>
<code>Public  fetchLockStatus()</code>
<comments><![CDATA[Fetches from the server the locked status of the item using the item's ID.]]></comments>
<remarks><![CDATA[The method sends a request to the server in order to fetch the latest lock status of the item on server and updates the item's property locked_by_id. ]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The item's type or ID is not set. &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.fetchRelationships</id>
<label>fetchRelationships</label>
<code>Overload:Aras.IOM.Item.fetchRelationships</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.fetchRelationships(System.String)</id>
<label>fetchRelationships</label>
<arguments>
<parameter type="" name="relationshipTypeName">Name of the relationship type.</parameter>
</arguments>
<returns>If server request failed the method returns an "error" item; otherwise it returns <c>this</c>.</returns>
<code>Public  fetchRelationships(System.String)</code>
<comments><![CDATA[Fetches relationships of specified type from the server and sets them on the item.]]></comments>
<remarks><![CDATA[The method performs a server request.]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; Item's ID is not set. &lt;/li&gt;</exception>
<exception type="System.ArgumentException">Relationship type either null or empty.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.fetchRelationships(System.String,System.String)</id>
<label>fetchRelationships</label>
<arguments>
<parameter type="" name="relationshipTypeName">Name of the relationship type.</parameter>
<parameter type="" name="selectList">Select list that is set on attribute 'select' of the request (see "Programmer's Guide" for more info on format of select list).</parameter>
</arguments>
<returns>If server request failed the method returns an "error" item; otherwise it returns <c>this</c>.</returns>
<code>Public  fetchRelationships(System.String,System.String)</code>
<comments><![CDATA[Fetches relationships of specified type from the server and sets them on the item. Specified select list will be set on the request AML.]]></comments>
<remarks><![CDATA[The method performs a server request.]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; Item's ID is not set. &lt;/li&gt;</exception>
<exception type="System.ArgumentException">Relationship type either null or empty.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.fetchRelationships(System.String,System.String,System.String)</id>
<label>fetchRelationships</label>
<arguments>
<parameter type="" name="relationshipTypeName">Name of the relationship type.</parameter>
<parameter type="" name="selectList">Select list that is set on attribute 'select' of the request (see "Programmer's Guide" for more info on format of select list).</parameter>
<parameter type="" name="orderBy">The value is set on attribute 'order_by' of the request (see "Programmer's Guide" for more info on format of 'order_by').</parameter>
</arguments>
<returns>If server request failed the method returns an "error" item; otherwise it returns <c>this</c>.</returns>
<code>Public  fetchRelationships(System.String,System.String,System.String)</code>
<comments><![CDATA[Fetches relationships of specified type from the server and sets them on the item. Specified select list and order are set on the request AML.]]></comments>
<remarks><![CDATA[The method performs a server request. If relationships of the specified type already exist on this.node they are removed and replaced by the relationships fetched from the server.]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; Item's ID is not set. &lt;/li&gt;</exception>
<exception type="System.ArgumentException">Relationship type either null or empty.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getAction</id>
<label>getAction</label>
<returns>Value of the 'action' attribute if the attribute exists, empty string otherwise</returns>
<code>Public  getAction()</code>
<comments><![CDATA[Returns the 'action' attribute from the Item node.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.getAttribute</id>
<label>getAttribute</label>
<code>Overload:Aras.IOM.Item.getAttribute</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getAttribute(System.String)</id>
<label>getAttribute</label>
<arguments>
<parameter type="" name="attributeName">The qualified name of the attribute.</parameter>
</arguments>
<returns>Attribute value or null if the attribute doesn't exist</returns>
<code>Public  getAttribute(System.String)</code>
<comments><![CDATA[Returns value of the attribute with the specified name on the item's node.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getAttribute(System.String,System.String)</id>
<label>getAttribute</label>
<arguments>
<parameter type="" name="attributeName">The qualified name of the attribute.</parameter>
<parameter type="" name="defaultValue">Default value of the attribute.</parameter>
</arguments>
<returns>Attribute value if the attribute exists, default value otherwise</returns>
<code>Public  getAttribute(System.String,System.String)</code>
<comments><![CDATA[Returns value of the attribute with the specified name on the item's node.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getErrorCode</id>
<label>getErrorCode</label>
<returns>Value of &lt;faultcode&gt;. If the item is not an "error" item, empty string is returned.</returns>
<code>Public  getErrorCode()</code>
<comments><![CDATA[Gets error code of the "error" item.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getErrorDetail</id>
<label>getErrorDetail</label>
<returns>If the instance is not an error item an empty string is retured.</returns>
<code>Public  getErrorDetail()</code>
<comments><![CDATA[Returns details of the error item.]]></comments>
<remarks><![CDATA[In most cases error details contains a low level error details (e.g. actual SQL error message) obtained from server. ]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getErrorSource</id>
<label>getErrorSource</label>
<returns>If the instance is not an error item, an empty string is returned.</returns>
<code>Public  getErrorSource()</code>
<comments><![CDATA[Returns the content of the <faultactor> element of SOAP Fault element.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getErrorString</id>
<label>getErrorString</label>
<returns>The returned value is obtained from the &lt;faultstring&gt; tag of &lt;Fault&gt;. If the instance is not an error item an emtpy string is returned.</returns>
<code>Public  getErrorString()</code>
<comments><![CDATA[Returns the error message.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getErrorWho</id>
<label>getErrorWho</label>
<returns>Value of &lt;faultcode&gt;.</returns>
<code>Public  getErrorWho()</code>
<comments><![CDATA[Same as getErrorCode().]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getFileName</id>
<label>getFileName</label>
<returns>Name of the physical file attached to the Item of type "File".</returns>
<code>Public  getFileName()</code>
<comments><![CDATA[Returns the filename for the attached file. This is only is meaningful if the type="File", otherwise throws an exception.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetHashCode</id>
<label>GetHashCode</label>
<code>Public  GetHashCode()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getID</id>
<label>getID</label>
<returns>ID of the item or empty string if ID was not found.</returns>
<code>Public  getID()</code>
<comments><![CDATA[Returns ID of the Item node. According to AML standard ID could be set on <Item> either as the attribute with name 'id' or as a sub-tag <id> (i.e. item property) or both.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getInnovator</id>
<label>getInnovator</label>
<code>Public  getInnovator()</code>
<comments><![CDATA[Returns instance of Innovator this Item "belongs" to.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getItemByIndex(System.Int32)</id>
<label>getItemByIndex</label>
<arguments>
<parameter type="" name="index">0 based index</parameter>
</arguments>
<returns>Found item. Returned item shares its <c>dom</c> with <c>this</c> item (i.e. returned item and <c>this</c> item <c>dom</c> property reference the same instance of ArasXmlDocument).</returns>
<code>Public  getItemByIndex(System.Int32)</code>
<comments><![CDATA[Gets an item by index.]]></comments>
<remarks><![CDATA[The returned item shares the dome with this item.]]></remarks>
<exception type="System.Exception">The instance does not represent a collection of items.</exception>
<exception type="System.IndexOutOfRangeException">Passed index is out of range.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getItemCount</id>
<label>getItemCount</label>
<returns><list type="bullet"><item><description>'0' if the item is an error with error code 0 (No Items Found).</description></item><item><description>'-1' if the item is an error of any other type</description></item><item><description> N (where N is a positive integer for number of items that the instance represents) if the item is not an error </description></item></list></returns>
<code>Public  getItemCount()</code>
<comments><![CDATA[Returns the number of items that the instance represents.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getItemsByXPath(System.String)</id>
<label>getItemsByXPath</label>
<arguments>
<parameter type="" name="xpath">XPath for selecting &lt;Item&gt; nodes</parameter>
</arguments>
<returns>Instance of the class that represents either a single item or a collection of items. The collection could be empty. The returned item shares its <c>dom</c> with <c>this</c> item, i.e. returned item <c>dom</c> and <c>this.dom</c> reference the same instance of ArasXmlDocument.</returns>
<code>Public  getItemsByXPath(System.String)</code>
<comments><![CDATA[Gets an item (single or collection) resolving xpath specified.]]></comments>
<remarks><![CDATA[The method applies the specified xpath on this.node if it's set or on this.dom otherwise. If a single <Item> node was found, it's assigned to the node. If 0 or more than 1 <Item> nodes were found, it's referenced by the nodeList of the returned item.]]></remarks>
<exception type="System.Exception">Item's internal structure is wrong (e.g. this.dom == null)</exception>
<exception type="System.ArgumentException">Specified XPath doesn't resolve to &lt;Item&gt; nodes.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getLockStatus</id>
<label>getLockStatus</label>
<returns><list type="bullet"><item><description> 0 not locked </description></item><item><description> 1 locked by user </description></item><item><description> 2 locked by other </description></item></list></returns>
<code>Public  getLockStatus()</code>
<comments><![CDATA[Gets item's lock status based on the property locked_by_id.]]></comments>
<remarks><![CDATA[If the property locked_by_id is not set on item's AML, the method returns 0. In order to fetch item's lock status from the server use fetchLockStatus. ]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getLogicalChildren</id>
<label>getLogicalChildren</label>
<returns>Item object with the <c>nodeList</c> containing logical nodes that are direct children of the <c>this.node</c>. The returned item shares its <c>dom</c> with <c>this</c> item.</returns>
<code>Public  getLogicalChildren()</code>
<comments><![CDATA[Returns Item object with the nodeList containing logical nodes that are children of the this.node.]]></comments>
<remarks><![CDATA[The method allows to traverse logical nodes of an item using exclusively IOM API. 
            ...
            Item lchildren = item.getLogicalChildren();
            for( int i = 0; i < lchildren.getItemCount(); i++ )
            {
              Item lchild = lchildren.getItemByIndex(i);
              ...
            }
            ...
            ]]></remarks>
<exception type="System.Exception"> The instance is neither a single regular item (i.e. item referencing &lt;Item&gt; node) nor a logical item. </exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getLogicalItems</id>
<label>getLogicalItems</label>
<returns>Item object with the <c>nodeList</c> containing all logical nodes of <c>this.node</c>. The returned item shares its <c>dom</c> with <c>this</c> item.</returns>
<code>Public  getLogicalItems()</code>
<comments><![CDATA[Returns the Item object with the nodeList containing all logical nodes of this.node.]]></comments>
<exception type="System.Exception"> The instance is neither a single regular item (i.e. item referencing &lt;Item&gt; node) nor a logical item. </exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getNewID</id>
<label>getNewID</label>
<returns>GUID as a string</returns>
<code>Public  getNewID()</code>
<comments><![CDATA[Generate new 32 character hex string globally unique identifier.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getParentItem</id>
<label>getParentItem</label>
<returns>If <c>this.node</c> doesn't have an ancestor::Item, <c>null</c> is returned.</returns>
<code>Public  getParentItem()</code>
<comments><![CDATA[Returns a parent item of the instance.]]></comments>
<remarks><![CDATA[The returned parent item is constructed the following way: dom = this.domnode = this.node.SelectSingleItem( "ancestor::Item" ) Note, that returned item dom  and this.dom reference the same instance of ArasXmlDocument.]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.getProperty</id>
<label>getProperty</label>
<code>Overload:Aras.IOM.Item.getProperty</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getProperty(System.String)</id>
<label>getProperty</label>
<arguments>
<parameter type="" name="propertyName">Property name.</parameter>
</arguments>
<returns>If the property is an item-property, ID of the item-property is returned. If the property doesn't exist or it's an item-property without ID, <c>null</c> is returned ( in JavaScript <c>undefined</c> is return) ; otherwise the method returns value of the specified property.</returns>
<code>Public  getProperty(System.String)</code>
<comments><![CDATA[Gets value of the property with the specified name.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getProperty(System.String,System.String)</id>
<label>getProperty</label>
<arguments>
<parameter type="" name="propertyName">Property name.</parameter>
<parameter type="" name="defaultValue">Default value of the property.</parameter>
</arguments>
<returns>If the property is an item-property, ID of the item-property is returned. If the property doesn't exist or it's an item-property without ID, the default value is returned; otherwise the method returns value of the specified property. Note, that if the property has attribute <c>is_null</c> set to <c>1</c> and the property value is empty string (e.g. &lt;p1 is_null='1'/&gt; or &lt;p1 is_null='1'&gt;&lt;/p1&gt;) then the property value is interpreted as <c>null</c>.</returns>
<code>Public  getProperty(System.String,System.String)</code>
<comments><![CDATA[Gets value of the property with the specified name.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getProperty(System.String,System.String,System.String)</id>
<label>getProperty</label>
<arguments>
<parameter type="" name="propertyName">Property name.</parameter>
<parameter type="" name="defaultValue">Default value of the property.</parameter>
<parameter type="" name="lang">Language for which the property value has to be returned. If null value is passed, the language of the current session is assumed.</parameter>
</arguments>
<returns>If the property is an item-property, ID of the item-property is returned. If the property doesn't exist or it's an item-property without ID, the default value is returned; otherwise the method returns value of the specified property name for the specified language.</returns>
<code>Public  getProperty(System.String,System.String,System.String)</code>
<comments><![CDATA[Gets value of the property with the specified name.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.getPropertyAttribute</id>
<label>getPropertyAttribute</label>
<code>Overload:Aras.IOM.Item.getPropertyAttribute</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getPropertyAttribute(System.String,System.String)</id>
<label>getPropertyAttribute</label>
<arguments>
<parameter type="" name="propertyName">Property name.</parameter>
<parameter type="" name="attributeName">Attribute name</parameter>
</arguments>
<returns>If either property with the specified name or the specified attribute on the property doesn't exist, returns <c>null</c> ( in JavaScript, returns <c>undefined</c>.)</returns>
<code>Public  getPropertyAttribute(System.String,System.String)</code>
<comments><![CDATA[Gets the specified attribute of the property with the specified name.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getPropertyAttribute(System.String,System.String,System.String)</id>
<label>getPropertyAttribute</label>
<arguments>
<parameter type="" name="propertyName">Property name.</parameter>
<parameter type="" name="attributeName">Attribute name</parameter>
<parameter type="" name="defaultValue">Attribute default value</parameter>
</arguments>
<returns>If either property with the specified name or the specified attribute on the property doesn't exist, returns the default value.</returns>
<code>Public  getPropertyAttribute(System.String,System.String,System.String)</code>
<comments><![CDATA[Gets the specified attribute of the property with the specified name.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getPropertyAttribute(System.String,System.String,System.String,System.String)</id>
<label>getPropertyAttribute</label>
<arguments>
<parameter type="" name="propertyName">Property name.</parameter>
<parameter type="" name="attributeName">Attribute name</parameter>
<parameter type="" name="defaultValue">Attribute default value</parameter>
<parameter type="" name="lang">Language for which the property attribute has to be returned. If null value is passed, the language of the current session is assumed.</parameter>
</arguments>
<returns>If either property with the specified name or the specified attribute on the property doesn't exist, returns the default value; otherwise returns value of the property attribute for the specified language.</returns>
<code>Public  getPropertyAttribute(System.String,System.String,System.String,System.String)</code>
<comments><![CDATA[Gets the specified attribute of the property with the specified name and language.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.getPropertyCondition</id>
<label>getPropertyCondition</label>
<code>Overload:Aras.IOM.Item.getPropertyCondition</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getPropertyCondition(System.String)</id>
<label>getPropertyCondition</label>
<arguments>
<parameter type="" name="propertyName">Property name.</parameter>
</arguments>
<returns>If either property with the specified name or attribute 'condition' on the property doesn't exist, returns <c>null</c> ( in JavaScript, returns <c>undefined</c>.)</returns>
<code>Public  getPropertyCondition(System.String)</code>
<comments><![CDATA[Gets the 'condition' attribute of the property with the specified name.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getPropertyCondition(System.String,System.String)</id>
<label>getPropertyCondition</label>
<arguments>
<parameter type="" name="propertyName">Property name.</parameter>
<parameter type="" name="lang">Language for which the property condition has to be returned. If null value is passed, the language of the current session is assumed.</parameter>
</arguments>
<returns>If either property with the specified name or attribute 'condition' on the property doesn't exist, returns <c>null</c>.</returns>
<code>Public  getPropertyCondition(System.String,System.String)</code>
<comments><![CDATA[Gets the 'condition' attribute of the property with the specified name and language.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getPropertyItem(System.String)</id>
<label>getPropertyItem</label>
<arguments>
<parameter type="" name="propertyName">Property name.</parameter>
</arguments>
<returns>Found item-property. If by some reason an item can't be returned (e.g. 'this.dom' doesn't have a property with the specified name or the property contains just id but type of the item-property is unknown), the method returns null. NOTE: If specified property name is 'id' then the method returns <c>this</c> item.</returns>
<code>Public  getPropertyItem(System.String)</code>
<comments><![CDATA[Gets item-property by name.]]></comments>
<remarks><![CDATA[The method tries to find the specified property on the item. If found, the propery may either a) contain child <Item> node or b) contain just id. In case a), the child <Item> node is used for constructing the returned Item; note, that in this case the returned item shares dom with this item. In case b), an attempt is made to construct a simple Item with the following dom: <Item type='...' id='...'><id>...</id></Item> to be returned. Note that in this case, the returned Item doesn't share its dom with this.]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getRelatedItem</id>
<label>getRelatedItem</label>
<returns>Related item. If by some reason the related item can't be returned (e.g. 'this.dom' doesn't have 'related_id' property or type of the related item is unknown), the method returns null.</returns>
<code>Public  getRelatedItem()</code>
<comments><![CDATA[Gets related item of the relationship.]]></comments>
<remarks><![CDATA[Tries to find related_id property on the item. If found, the propery may either a) contain child <Item> node or b) contain just id. In case a), the child <Item> node is used for constructing the returned Item; note, that in this case the returned item shares dom with this item. In case b), an attempt is made to construct a simple Item with the following dom: <Item type='...' id='...'><id>...</id></Item> to be returned. Note that in this case, the returned Item doesn't share its dom with this. ]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getRelatedItemID</id>
<label>getRelatedItemID</label>
<returns>ID of the related item. If related item not found, return empty string.</returns>
<code>Public  getRelatedItemID()</code>
<comments><![CDATA[Tries to find related item (xpath: "./related_id") on item's node and returns its ID.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.getRelationships</id>
<label>getRelationships</label>
<code>Overload:Aras.IOM.Item.getRelationships</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getRelationships(System.String,System.String)</id>
<label>getRelationships</label>
<arguments>
<parameter type="" name="itemTypeName">Type of relationship.</parameter>
<parameter type="" name="selectAttr">Select list for relations items.</parameter>
</arguments>
<returns>Item that is a collection of relationship items with specified name. If <c>this</c> doesn't have any relationship of this type, the returned item <c>nodeList</c> will be empty.</returns>
<code>Public  getRelationships(System.String,System.String)</code>
<comments><![CDATA[Returns an item that is a collection of relationship item with specified type; each relationship item has only properties specified in the select list.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getRelationships(System.String,System.String,System.String)</id>
<label>getRelationships</label>
<arguments>
<parameter type="" name="itemTypeName">Type of relationship.</parameter>
<parameter type="" name="selectAttr">Select list for relations items.</parameter>
<parameter type="" name="orderByAttr">Comma delimited list of property names used to set the SQL "ORDER BY" clause.</parameter>
</arguments>
<returns>Item that is a collection of relationship items with specified name. If <c>this</c> doesn't have any relationship of this type, the returned item <c>nodeList</c> will be empty.</returns>
<code>Public  getRelationships(System.String,System.String,System.String)</code>
<comments><![CDATA[Returns an item that is a collection of relationship item with specified type; each relationship item has only properties specified in the select list.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getRelationships</id>
<label>getRelationships</label>
<returns>Item that is a collection of all relationships items available on the instance. If <c>this</c> doesn't have relationships, the returned item <c>nodeList</c> will be empty.</returns>
<code>Public  getRelationships()</code>
<comments><![CDATA[Returns an item that is a collection of all relationships items available on the instance.]]></comments>
<remarks><![CDATA[The methods does not make a request to the server but rather returns relationships items available on this.dom in memory. If order to get relationships from server please use fetchRelationships(...) methods. ]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getRelationships(System.String)</id>
<label>getRelationships</label>
<arguments>
<parameter type="" name="itemTypeName">Type of relationship.</parameter>
</arguments>
<returns>Item that is a collection of relationships items with specified name available on the instance. If <c>this</c> doesn't have any relationships of this type, the returned item <c>nodeList</c> will be empty.</returns>
<code>Public  getRelationships(System.String)</code>
<comments><![CDATA[Returns an item that is a collection of relationships item with specified type available on the instance.]]></comments>
<remarks><![CDATA[The methods does not make a request to the server but rather returns relationships items available on this.dom in memory. If order to get relationships from server please use fetchRelationships(...) methods. ]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getResult</id>
<label>getResult</label>
<returns>If <c>this.dom</c> is <c>null</c> or node with xpath = Item.XPathResult was not found, the method returns an empty string.</returns>
<code>Public  getResult()</code>
<comments><![CDATA[Returns 'InnerText' property of ArasXmlNode with xpath = Item.XPathResult from the item's dom.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.getType</id>
<label>getType</label>
<returns>Value of 'type' attribute if the attribute exists, empty string otherwise.</returns>
<code>Public  getType()</code>
<comments><![CDATA[Returns value of the 'type' attribute of the Item node.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetType</id>
<label>GetType</label>
<code>Public  GetType()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.instantiateWorkflow(System.String)</id>
<label>instantiateWorkflow</label>
<arguments>
<parameter type="" name="workflowMapID">ID of a WorkflowMap.</parameter>
</arguments>
<returns>Returns a Workflow Process item created by this method or an "error" item.</returns>
<code>Public  instantiateWorkflow(System.String)</code>
<comments><![CDATA[Instantiates workflow for the item using specified workflow map.]]></comments>
<remarks><![CDATA[The method does the following: a) sends a request to the server to instantiate the specified Workflow Map to a Workflow Process b) using ID of the WorkflowProcess item obtained from the server, sends another request to attach the Workflow Process to the controlled item via the "Workflow" relationship. Note, that the item itself is not modified by the method.]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; Either 'id' or 'typeId' is not set on the item. &lt;/li&gt;&lt;li&gt; The item is a new item not saved in the database yet. &lt;/li&gt;</exception>
<exception type="System.ArgumentException">WorkflowMap ID is either 'null' or empty string.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.isCollection</id>
<label>isCollection</label>
<returns>'true' if <c>this.nodeList != null AND this.node == null</c>, 'false' otherwise</returns>
<code>Public  isCollection()</code>
<comments><![CDATA[Checks if the instance represents a set of items and not a single item.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.isEmpty</id>
<label>isEmpty</label>
<returns>'true' if the item is an error but has <c>faultcode="0"</c>, 'false' otherwise.</returns>
<code>Public  isEmpty()</code>
<comments><![CDATA[This is the replacement for the old hasFault() function with the Boolean argument of false to indicate to ignore the zero based faults.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.isError</id>
<label>isError</label>
<returns>'true' if the item is an "error item" (i.e. <c>this.dom</c> has a top_level tag <c>Item.XPathFault</c>), 'false' otherwise</returns>
<code>Public  isError()</code>
<comments><![CDATA[Checks if the item is an "error item".]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.isLocked</id>
<label>isLocked</label>
<returns><list type="bullet"><item><description> 0 not locked </description></item><item><description> 1 locked by user </description></item><item><description> 2 locked by other </description></item></list></returns>
<code>Public  isLocked()</code>
<comments><![CDATA[Fetches from the server the locked status of the item using the item's ID.]]></comments>
<remarks><![CDATA[The method sends a request to the server to fetch item's lock status only if the item doesn't have property locked_by_id set, otherwise the value of the property is returned. ]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.isLogical</id>
<label>isLogical</label>
<returns><c>true</c> if the <c>this.node != null</c> and <c>this.node.LocalName</c> is "AND" | "OR" | "NOT" (case insensitive); <c>false</c> otherwise.</returns>
<code>Public  isLogical()</code>
<comments><![CDATA[Find out if the item's node is a "logical" node ("AND", "OR", "NOT").]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.isNew</id>
<label>isNew</label>
<returns>'true' if the Item has the attribute 'isNew' set to '1', 'false' otherwise</returns>
<code>Public  isNew()</code>
<comments><![CDATA[Checks the attribute 'isNew' on the item.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.isRoot</id>
<label>isRoot</label>
<returns>'true' if <c>this.node</c> is the top 'Item' node in <c>this.dom</c>, 'false' otherwise</returns>
<code>Public  isRoot()</code>
<comments><![CDATA[Checks if this.node is the root item in this.dom.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.loadAML(System.String)</id>
<label>loadAML</label>
<arguments>
<parameter type="" name="AML">String with AML script. For more details on format of AML please read "Innovator Programmer's Guide".</parameter>
</arguments>
<code>Public  loadAML(System.String)</code>
<comments><![CDATA[This loads the dom property for the Item object with the passed AML. The method will also set the node and nodeList properties for the Item object according to the content of the loaded AML.]]></comments>
<remarks><![CDATA[In general, loaded AML could present any valid XmlDocument. However, user must follow one of supported AML formats in order to benefit from IOM public API. The most popular of supported AML formats are shown below:  AMLs representing a Single Innovator Item: (a) Item node as a root 
               <Item >  
                        <prop1>a</prop1>
                        ...
                        <propN>b</propN>
               </Item>
               (b) SOAP-Result wrapper 
                    <SOAP-ENV:Envelope xmlns:SOAP-ENV=.../>
                        <SOAP-ENV:Body>
                            <Result>
                                <Item >  
                                    <prop1>a</prop1>
                                    ...
                                    <propN>b</propN>
                                </Item>
                            </Result>
                        </SOAP-ENV:Body>
                    </SOAP-ENV:Envelope>
               AMLs representing a Set of Innovator Items: (a) AML node as a root 
                    <AML>
                     <Item ... />
                         ...
                        <Item ... />
                    </AML>
               (b) SOAP-Result wrapper 
                    <SOAP-ENV:Envelope xmlns:SOAP-ENV=.../>
                        <SOAP-ENV:Body>
                            <Result>
                                <Item >  
                                    <prop1>a</prop1>
                                    ...
                                    <propN>b</propN>
                                </Item>
                                ...
                                <Item >  
                                    <prop1>a</prop1>
                                    ....
                                    <propM>b</propM>
                                </Item>
                            </Result>
                        </SOAP-ENV:Body>
                    </SOAP-ENV:Envelope>
               AML representing an Error: 
               <SOAP-ENV:Envelope xmlns:SOAP-ENV=.../>
                   <SOAP-ENV:Body>
                      <SOAP-ENV:Fault>
                         <faultcode>[int]</faultcode>
                         <faultactor>...</faultactor>
                         <detail><...></detail>
                      </SOAP-ENV:Fault>
                   </SOAP-ENV:Body>
               </SOAP-ENV:Envelope>
               AML representing a SOAP-Result wrapper for an arbitrary Text: 
               <SOAP-ENV:Envelope xmlns:SOAP-ENV=.../>
                   <SOAP-ENV:Body>
                      <Result>[text]</Result>
                   </SOAP-ENV:Body>
               </SOAP-ENV:Envelope>
              ]]></remarks>
<exception type="System.Xml.XmlException">There is a load or parse error in the AML. Item remains uninitialized.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.lockItem</id>
<label>lockItem</label>
<returns>Response item from the server.</returns>
<code>Public  lockItem()</code>
<comments><![CDATA[Applies the 'lock' action on the item and returns the server response.]]></comments>
<remarks><![CDATA[The method sends a request to the server to lock the item. This is almost the equivalent to this.apply("lock") except that: a) the method checks that item's type and ID are set before sending the request; b) the method updates locked_by_id property of this item with the value obtained from the server if the server response is not an error. ]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The item's type or ID is not set. &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.newAND</id>
<label>newAND</label>
<returns>Logical "AND" item. Returned item shares <c>dom</c> with <c>this</c> item.</returns>
<code>Public  newAND()</code>
<comments><![CDATA[Inserts logical node with tag <and> under the parent node, which can be Item or Logical, and returns an Item Object that represents a newly inserted logical node.]]></comments>
<remarks><![CDATA[Logical item is an item which node references to the "logical" tag, i.e. 'or', 'and' or 'not'. Logical items are used to build request conditions where item's properties serve as condition expressions. User has to use setProperty(...), setPropertyCondition(...) to set condition expressions on logical item (see example below). It's possible to build nested logical request conditions by calling newOR(), newAND() or newNOT() on a logical item. ]]></remarks>
<example><![CDATA[
            ...
            var myItem = myInnovator.newItem('Foo','get');
            var logicalAND = myItem.newAND();
            logicalAND.setProperty('foo','bar1');
            var nestedOR = logicalAND.newOR();
            nestedOR.setProperty('foo2','bar2');
            nestedOR.setProperty('foo3','bar3');
            //The following line of code is optional because 'eq' is the default property condition:
            logicalOR.setPropertyCondition('foo3', 'eq');
            ...
            ]]></example>
<exception type="System.Exception"> If the instance is neither a single regular item (i.e. item referencing &lt;Item&gt; node) nor a logical item. </exception>
<exception type="System.ArgumentException">this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.newInnovator</id>
<label>newInnovator</label>
<returns>New instance of Innovator.</returns>
<code>Public  newInnovator()</code>
<comments><![CDATA[Creates a new Innovator object.]]></comments>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.newItem</id>
<label>newItem</label>
<code>Overload:Aras.IOM.Item.newItem</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.newItem</id>
<label>newItem</label>
<returns>Newly created instance of Item.</returns>
<code>Public  newItem()</code>
<comments><![CDATA[Returns a new Item.]]></comments>
<remarks><![CDATA[The new Item will have no properties.]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.newItem(System.String)</id>
<label>newItem</label>
<arguments>
<parameter type="" name="itemTypeName">Name of the ItemType.</parameter>
</arguments>
<returns>Newly created instance of Item.</returns>
<code>Public  newItem(System.String)</code>
<comments><![CDATA[Returns a new Item with the specified type.]]></comments>
<remarks><![CDATA[The ItemType name is used to set the 'type' attribute. The new Item will have no properties. In order to populate it with default property values of its ItemType call Item.fetchDefaultPropertyValues(true) on the item. ]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.newItem(System.String,System.String)</id>
<label>newItem</label>
<arguments>
<parameter type="" name="itemTypeName">Name of the ItemType.</parameter>
<parameter type="" name="action">Name of action (e.g. "get", "update", etc.)</parameter>
</arguments>
<returns>Newly created instance of Item.</returns>
<code>Public  newItem(System.String,System.String)</code>
<comments><![CDATA[Returns a new Item with the specified type and action.]]></comments>
<remarks><![CDATA[The ItemType name is used to set the 'type' attribute and the action name is used to set the 'action' attribute on the Item. The new Item will have no properties. In order to populate it with default property values of its ItemType call Item.fetchDefaultPropertyValues(true) on the item. ]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.newNOT</id>
<label>newNOT</label>
<returns>Logical "NOT" item. Returned item shares <c>dom</c> with <c>this</c> item.</returns>
<code>Public  newNOT()</code>
<comments><![CDATA[Inserts logical node with tag <not> under the parent node, which can be Item or Logical, and returns an Item Object that represents a newly inserted logical node.]]></comments>
<remarks><![CDATA[Logical item is an item which node references to the "logical" tag, i.e. 'or', 'and' or 'not'. Logical items are used to build request conditions where item's properties serve as condition expressions. User has to use setProperty(...), setPropertyCondition(...) to set condition expressions on logical item (see example below). It's possible to build nested logical request conditions by calling newOR(), newAND() or newNOT() on a logical item. ]]></remarks>
<example><![CDATA[
            ...
            var myItem = myInnovator.newItem('Foo','get');
            var logicalNOT = myItem.newNOT();
            logicalNOT.setProperty('foo','bar1');
            //The following line of code is optional because 'eq' is the default property condition:
            logicalNOT.setPropertyCondition('foo', 'eq');
            ...
            
            ...
            var myItem = myInnovator.newItem('Foo','get');
            var logicalNOT = myItem.newNOT();
            logicalNOT.setProperty('foo','bar1, bar2);
            logicalNOT.setPropertyCondition('foo','in')
            ...
            ]]></example>
<exception type="System.Exception"> If the instance is neither a single regular item (i.e. item referncing &lt;Item&gt; node) nor a logical item. </exception>
<exception type="System.ArgumentException">this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.newOR</id>
<label>newOR</label>
<returns>Logical "OR" item. Returned item shares <c>dom</c> with <c>this</c> item.</returns>
<code>Public  newOR()</code>
<comments><![CDATA[Inserts logical node with tag <or> under the parent node, which can be Item or Logical, and returns an Item Object that represents a newly inserted logical node.]]></comments>
<remarks><![CDATA[Logical item is an item which node references to the "logical" tag, i.e. 'or', 'and' or 'not'. Logical items are used to build request conditions where item's properties serve as condition expressions. User has to use setProperty(...), setPropertyCondition(...) to set condition expressions on logical item (see example below). It's possible to build nested logical request conditions by calling newOR(), newAND() or newNOT() on a logical item. ]]></remarks>
<example><![CDATA[
            ...
            var myItem = myInnovator.newItem('Foo','get');
            var logicalOR = myItem.newOR();
            logicalOR.setProperty('foo1','bar1, bar2');
            logicalOR.setPropertyCondition('foo1', 'in');
            logicalOR.setProperty('foo2','junk');
            //The following line of code is optional because 'eq' is the default property condition:
            logicalOR.setPropertyCondition('foo2', 'eq');
            ...
            ]]></example>
<exception type="System.Exception"> If the instance is neither a single regular item (i.e. item referencing &lt;Item&gt; node) nor a logical item. </exception>
<exception type="System.ArgumentException">this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.newXMLDocument</id>
<label>newXMLDocument</label>
<returns>Instance of System.Xml.ArasXmlDocument</returns>
<code>Public  newXMLDocument()</code>
<comments><![CDATA[Creates new ArasXmlDocument.]]></comments>
<remarks><![CDATA[Returned ArasXmlDocument has property PreserveWhitespace set to true.]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.promote(System.String,System.String)</id>
<label>promote</label>
<arguments>
<parameter type="" name="state">State to promote.</parameter>
<parameter type="" name="comments">If ItemType of the item is configured to log "history" records when items of the ItemType are created\promoted\etc., (i.e. if the ItemType's property "save_history" is set to "1") then the comments will be used as a comment for the "history" record about the promote event.</parameter>
</arguments>
<returns>"Result" item with inner text "Ok" in case of success. Otherwise "error" item (if promote failed).</returns>
<code>Public  promote(System.String,System.String)</code>
<comments><![CDATA[Promote item to the specified state.]]></comments>
<remarks><![CDATA[The method sends a request to the server to promote item and returns the response. Note that this item is not modified by the method.]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">Argument 'state' is either 'null' or an empty string.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.removeAttribute(System.String)</id>
<label>removeAttribute</label>
<arguments>
<parameter type="" name="attributeName">The name of the attribute to remove.This is a qualified name.</parameter>
</arguments>
<code>Public  removeAttribute(System.String)</code>
<comments><![CDATA[Removes the specified attribute if the attribute exist; does nothing otherwise.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.removeItem(Aras.IOM.Item)</id>
<label>removeItem</label>
<arguments>
<parameter type="" name="item">Item to be removed.</parameter>
</arguments>
<code>Public  removeItem(Aras.IOM.Item)</code>
<comments><![CDATA[Remove specified item from the this.dom]]></comments>
<remarks><![CDATA[this has to represent a collection of items. Passed item's dom must reference the same ArasXmlDocument as this.dom. If passed item's node is not null, the node and all its sub-items are removed from this.dom; else if passed item's nodeList is not null, every element of the list and its children are removed from this.dom. If before the removal either this.node or this.nodeList referenced any of the removed items, those properties are adjusted, i.e. this.node is set to null and\or this.nodeList is stripped of items that were just removed.]]></remarks>
<exception type="System.Exception">The instance doesn't represent a collection of items.</exception>
<exception type="System.ArgumentException">&lt;li&gt; Passed item and this don't reference the same ArasXmlDocument. &lt;/li&gt;&lt;li&gt; Passed item has wrong internal strucure; e.g. both node and nodeList are null; etc. &lt;/li&gt;&lt;li&gt; Can't remove an item node as its parent node is read-only. &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.removeLogical(Aras.IOM.Item)</id>
<label>removeLogical</label>
<arguments>
<parameter type="" name="logicalItem">Logical item to be removed.</parameter>
</arguments>
<code>Public  removeLogical(Aras.IOM.Item)</code>
<comments><![CDATA[Removes logical node referenced by the passed item from this.node.]]></comments>
<remarks><![CDATA[It's assumed that passed item's node is a child of this.node.]]></remarks>
<exception type="System.Exception"> The instance is neither a single regular item (i.e. item referencing &lt;Item&gt; node) nor a logical item. </exception>
<exception type="System.ArgumentException">&lt;li&gt; Passed item is not a logical item. &lt;/li&gt;&lt;li&gt; The passed item is not a child of this item. Or this.node is read-only. &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.removeProperty</id>
<label>removeProperty</label>
<code>Overload:Aras.IOM.Item.removeProperty</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.removeProperty(System.String)</id>
<label>removeProperty</label>
<arguments>
<parameter type="" name="propertyName">Property name.</parameter>
</arguments>
<code>Public  removeProperty(System.String)</code>
<comments><![CDATA[Removes the property tag with the specified name from the item's dom.]]></comments>
<remarks><![CDATA[No action if the specified property was not found.]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.removeProperty(System.String,System.String)</id>
<label>removeProperty</label>
<arguments>
<parameter type="" name="propertyName">Property name.</parameter>
<parameter type="" name="lang">Language for which the property needs to be removed. If null value is passed, the language of the current session is assumed.</parameter>
</arguments>
<code>Public  removeProperty(System.String,System.String)</code>
<comments><![CDATA[Removes the property tag with the specified name and language from the item's dom.]]></comments>
<remarks><![CDATA[No action if the specified property was not found.]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.removePropertyAttribute</id>
<label>removePropertyAttribute</label>
<code>Overload:Aras.IOM.Item.removePropertyAttribute</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.removePropertyAttribute(System.String,System.String)</id>
<label>removePropertyAttribute</label>
<arguments>
<parameter type="" name="propertyName">Name of the property</parameter>
<parameter type="" name="attributeName">Name of the attribute</parameter>
</arguments>
<code>Public  removePropertyAttribute(System.String,System.String)</code>
<comments><![CDATA[Modifies item's node by removing attribute on the specified property.]]></comments>
<remarks><![CDATA[No action if either specified property or attribute were not found.]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.removePropertyAttribute(System.String,System.String,System.String)</id>
<label>removePropertyAttribute</label>
<arguments>
<parameter type="" name="propertyName">Name of the property</parameter>
<parameter type="" name="attributeName">Name of the attribute</parameter>
<parameter type="" name="lang">Language for which the property attribute needs to be removed. If null value is passed, the language of the current session is assumed.</parameter>
</arguments>
<code>Public  removePropertyAttribute(System.String,System.String,System.String)</code>
<comments><![CDATA[Modifies item's node by removing attribute on the specified property with the specified xml:lang attribute.]]></comments>
<remarks><![CDATA[No action if either specified property or attribute were not found.]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.removeRelationship(Aras.IOM.Item)</id>
<label>removeRelationship</label>
<arguments>
<parameter type="" name="item">The relationship item to be removed.</parameter>
</arguments>
<code>Public  removeRelationship(Aras.IOM.Item)</code>
<comments><![CDATA[Removes the passed item's node from the 'Relationships' node of the item.]]></comments>
<remarks><![CDATA[Method doesn't sent a request to the server, it just edits item's DOM in memory. Passed item must share its dom with this item, i.e. both items dom must reference the same instance of ArasXmlDocument.]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">&lt;li&gt; Passed item doesn't represent a single item. &lt;/li&gt;&lt;li&gt; Passed item doesn't share its dom with this item. &lt;/li&gt;&lt;li&gt; Passed item is not a relationship. &lt;/li&gt;&lt;li&gt; 'Relationship' node of this is read-only. &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setAction(System.String)</id>
<label>setAction</label>
<arguments>
<parameter type="" name="action">Action name</parameter>
</arguments>
<code>Public  setAction(System.String)</code>
<comments><![CDATA[Set the 'action' attribute on this.node.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setAttribute(System.String,System.String)</id>
<label>setAttribute</label>
<arguments>
<parameter type="" name="attributeName">The name of the attribute to create or alter. This is a qualified name. If the name contains a colon it is parsed into prefix and local name components.</parameter>
<parameter type="" name="attributeValue">The value to set for the attribute.</parameter>
</arguments>
<code>Public  setAttribute(System.String,System.String)</code>
<comments><![CDATA[Set the value of the attribute with the specified name on the item's node.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.Xml.XmlException">The specified attribute name contains an invalid character.</exception>
<exception type="System.ArgumentException">The this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setErrorCode(System.String)</id>
<label>setErrorCode</label>
<arguments>
<parameter type="" name="errcode">Error code to set.</parameter>
</arguments>
<code>Public  setErrorCode(System.String)</code>
<comments><![CDATA[Sets error code on the "error" item.]]></comments>
<remarks><![CDATA[If the item is not an "error" item, the method does nothing.]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setErrorDetail(System.String)</id>
<label>setErrorDetail</label>
<arguments>
<parameter type="" name="detail">Error details that are set as InnerText on &lt;detail&gt; element of &lt;Fault&gt; without any pre-processing, so symbols like '&lt;', '&gt;', etc. will be escaped.</parameter>
</arguments>
<code>Public  setErrorDetail(System.String)</code>
<comments><![CDATA[Sets the detailed error message of the error item.]]></comments>
<remarks><![CDATA[Error details are always placed in <detail> tag inside CDATA block. If the instance is not an error item the method does nothing.]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setErrorSource(System.String)</id>
<label>setErrorSource</label>
<arguments>
<parameter type="" name="source">Value to be set on 'faultactor' element of SOAP Fault.</parameter>
</arguments>
<code>Public  setErrorSource(System.String)</code>
<comments><![CDATA[Sets the <faultactor> of the SOAP Fault element. If the instance is not an error item, the method does nothing.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setErrorString(System.String)</id>
<label>setErrorString</label>
<arguments>
<parameter type="" name="errorMessage">Error message to be set.</parameter>
</arguments>
<code>Public  setErrorString(System.String)</code>
<comments><![CDATA[Sets the error message of the error item.]]></comments>
<remarks><![CDATA[Passed value is set on <faultstring> tag of <Fault>. If the instance is not an error item the method does nothing.]]></remarks>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setErrorWho(System.String)</id>
<label>setErrorWho</label>
<arguments>
<parameter type="" name="who">Value to set</parameter>
</arguments>
<code>Public  setErrorWho(System.String)</code>
<comments><![CDATA[Same as setErrorCode().]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setFileName(System.String)</id>
<label>setFileName</label>
<arguments>
<parameter type="" name="filePath"></parameter>
</arguments>
<code>Public  setFileName(System.String)</code>
<comments><![CDATA[Set the filename for the attached file. This is only is meaningful if the type="File" and will cause the apply() to submit multipart/form-data to the VaultServer.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setFileProperty(System.String,System.String)</id>
<label>setFileProperty</label>
<arguments>
<parameter type="" name="propertyName">name of property of type File for which new physical file should be set</parameter>
<parameter type="" name="pathToFile">path to physical file which should be attached to property of the item</parameter>
</arguments>
<returns>Item of type File generated by method</returns>
<code>Public  setFileProperty(System.String,System.String)</code>
<comments><![CDATA[Set a file to an item reference.]]></comments>
<remarks><![CDATA[This method will allow to add/update a value of property with data type Item and data source File. Internally it will be created an item "File" with action "add" and set this new item to the property with name "propertyName". When Apply method would be called on the container item, new file will uploaded to the user's default vault server.]]></remarks>
<exception type="System.ArgumentNullException">&lt;li&gt; Agrument "propertyName" is null or empty. &lt;/li&gt;&lt;li&gt; Agrument "pathToFile" is null or empty. &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setID(System.String)</id>
<label>setID</label>
<arguments>
<parameter type="" name="id">ID of the item</parameter>
</arguments>
<code>Public  setID(System.String)</code>
<comments><![CDATA[Set the id attribute on the Item node. If the item has the property id as well, the property is set too.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setNewID</id>
<label>setNewID</label>
<code>Public  setNewID()</code>
<comments><![CDATA[Gets new ID by calling getNewID() then passes obtained ID to setID(id).]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.setProperty</id>
<label>setProperty</label>
<code>Overload:Aras.IOM.Item.setProperty</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setProperty(System.String,System.String)</id>
<label>setProperty</label>
<arguments>
<parameter type="" name="propertyName">Property name.</parameter>
<parameter type="" name="propertyValue">Value to be set on the property.</parameter>
</arguments>
<code>Public  setProperty(System.String,System.String)</code>
<comments><![CDATA[Set the property with the specified name. If property doesn't exist on the item, create it first and then set.]]></comments>
<remarks><![CDATA[If property has attribute is_null set to 1 and specified property value is not an empty string, the attribute is removed from the property. If specified property value is null, then attribute is_null='1' is set on the property and it's value is set to empty string (i.e. after setting null value the property tag will look like: <prop is_null='1' />).]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setProperty(System.String,System.String,System.String)</id>
<label>setProperty</label>
<arguments>
<parameter type="" name="propertyName">Property name.</parameter>
<parameter type="" name="propertyValue">Value to be set on the property.</parameter>
<parameter type="" name="lang">Language for which the property needs to be set. If null value is passed, the language of the current session is assumed.</parameter>
</arguments>
<code>Public  setProperty(System.String,System.String,System.String)</code>
<comments><![CDATA[Set the property with the specified name and language. If property doesn't exist on the item, create it first and then set.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.setPropertyAttribute</id>
<label>setPropertyAttribute</label>
<code>Overload:Aras.IOM.Item.setPropertyAttribute</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setPropertyAttribute(System.String,System.String,System.String)</id>
<label>setPropertyAttribute</label>
<arguments>
<parameter type="" name="propertyName">Property name</parameter>
<parameter type="" name="attributeName">Attribute name</parameter>
<parameter type="" name="attributeValue">Attribute value to be set</parameter>
</arguments>
<code>Public  setPropertyAttribute(System.String,System.String,System.String)</code>
<comments><![CDATA[Set the attribute for the specified property.]]></comments>
<remarks><![CDATA[If property tag with the specified name doesn't exist in this.node, the property tag is created after which the attribute is set on it. Note, that if the property tag is created by the method, the property value (i.e. tag's InnerText) is empty. ]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.Xml.XmlException">The specified attribute name contains an invalid character.</exception>
<exception type="System.ArgumentException">The property node\tag is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setPropertyAttribute(System.String,System.String,System.String,System.String)</id>
<label>setPropertyAttribute</label>
<arguments>
<parameter type="" name="propertyName">Property name</parameter>
<parameter type="" name="attributeName">Attribute name</parameter>
<parameter type="" name="attributeValue">Attribute value to be set</parameter>
<parameter type="" name="lang">Language for which the property attribute has to be set. If null value is passed, the language of the current session is assumed.</parameter>
</arguments>
<code>Public  setPropertyAttribute(System.String,System.String,System.String,System.String)</code>
<comments><![CDATA[Set the attribute for the specified property and language.]]></comments>
<remarks><![CDATA[If property tag with the specified name and language doesn't exist in this.node, the property tag is created after which the attribute is set on it. Note, that if the property tag is created by the method, the property value (i.e. tag's InnerText) is empty. ]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.Xml.XmlException">The specified attribute name contains an invalid character.</exception>
<exception type="System.ArgumentException">The property node\tag is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.Item.setPropertyCondition</id>
<label>setPropertyCondition</label>
<code>Overload:Aras.IOM.Item.setPropertyCondition</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setPropertyCondition(System.String,System.String)</id>
<label>setPropertyCondition</label>
<arguments>
<parameter type="" name="propertyName">Property name</parameter>
<parameter type="" name="condition">Condition value</parameter>
</arguments>
<code>Public  setPropertyCondition(System.String,System.String)</code>
<comments><![CDATA[Sets the attribute 'condition' on the specified property.]]></comments>
<remarks><![CDATA[If property tag with the specified name doesn't exist in this.node, the property tag is created after which the attribute 'condition' is set on it. Note, that if the property tag is created by the method, the property value (i.e. tag's InnerText) is empty. See "Innovator Programmer's Guide" for more details on condition syntax.]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The property node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setPropertyCondition(System.String,System.String,System.String)</id>
<label>setPropertyCondition</label>
<arguments>
<parameter type="" name="propertyName">Property name</parameter>
<parameter type="" name="condition">Condition value</parameter>
<parameter type="" name="lang">Language for which the property condition has to be set. If null value is passed, the language of the current session is assumed.</parameter>
</arguments>
<code>Public  setPropertyCondition(System.String,System.String,System.String)</code>
<comments><![CDATA[Sets the attribute 'condition' on the specified property with the specified language.]]></comments>
<remarks><![CDATA[If property tag with the specified name and language doesn't exist in this.node, the property tag is created after which the attribute 'condition' is set on it. Note, that if the property tag is created by the method, the property value (i.e. tag's InnerText) is empty. See "Innovator Programmer's Guide" for more details on condition syntax.]]></remarks>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The property node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setPropertyItem(System.String,Aras.IOM.Item)</id>
<label>setPropertyItem</label>
<arguments>
<parameter type="" name="propertyName">Name of the property</parameter>
<parameter type="" name="item">Instance of Item whose 'node' appends or replaces child &lt;Item&gt; node under the specified property.</parameter>
</arguments>
<returns>Instance of the class that represent the item-property. Returned item shares its 'dom' with <c>this</c> (i.e. <c>dom</c> property of both instances points to the same instance of ArasXmlDocument).</returns>
<code>Public  setPropertyItem(System.String,Aras.IOM.Item)</code>
<comments><![CDATA[Sets a property to an item reference.]]></comments>
<remarks><![CDATA[The method is trying to find the property with the specified name on the item. If not found, creates it. If the property's node contains child <Item> node, replace it with the passed item, else append passed item to the property's node. After the method was called, the passed item shares its 'dom' with this (i.e. 'dom' property of both instances points to the same instance of ArasXmlDocument).]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The instance has a wrong internal structure (e.g. item.node doesn't belong to item.dom; etc.). &lt;/li&gt;</exception>
<exception type="System.ArgumentException">&lt;li&gt; The item passed to the method doesn't represent a single item. &lt;/li&gt;&lt;li&gt;this.node is read-only. &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setRelatedItem(Aras.IOM.Item)</id>
<label>setRelatedItem</label>
<arguments>
<parameter type="" name="ritem">Related item</parameter>
</arguments>
<code>Public  setRelatedItem(Aras.IOM.Item)</code>
<comments><![CDATA[Sets the 'related_id' property to an item reference.]]></comments>
<remarks><![CDATA[The method is trying to find 'related_id' property on the item. If not found, creates it. If 'related_id' contains child <Item> node, replace it with the passed item, else append passed item to the 'related_id' node. After the method was called, the passed related item shares its dom with this item (i.e. dom property of both instances reference the same instance of ArasXmlDocument).]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The instance has a wrong internal structure (e.g. item.node doesn't belong to item.dom; etc.). &lt;/li&gt;</exception>
<exception type="System.ArgumentException">&lt;li&gt; The item passed to the method doesn't represent a single item. &lt;/li&gt;&lt;li&gt;this.node is read-only. &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.setType(System.String)</id>
<label>setType</label>
<arguments>
<parameter type="" name="itemTypeName">Name of the item type</parameter>
</arguments>
<code>Public  setType(System.String)</code>
<comments><![CDATA[Set the 'type' attribute on the Item node.]]></comments>
<exception type="System.Exception">The instance doesn't represent a single item.</exception>
<exception type="System.ArgumentException">The this.node is read-only.</exception>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.startWorkflow</id>
<label>startWorkflow</label>
<code>Public  startWorkflow()</code>
<comments><![CDATA[Starts the workflow process. Item's type must be "Workflow Process".]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.ToString</id>
<label>ToString</label>
<code>Public  ToString()</code>
<comments><![CDATA[Returns AML string that represents the current .]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.Item.unlockItem</id>
<label>unlockItem</label>
<returns>Response item from the server.</returns>
<code>Public  unlockItem()</code>
<comments><![CDATA[Applies the 'unlock' action on the item and returns the server response.]]></comments>
<remarks><![CDATA[The method sends a request to the server to unlock the item. This is almost the equivalent to this.apply("unlock") except that: a) the method checks that item's type and ID are set before sending the request; b) the method removes locked_by_id property of this item if the server response is not an error. ]]></remarks>
<exception type="System.Exception">&lt;li&gt; The instance doesn't represent a single item. &lt;/li&gt;&lt;li&gt; The item's type or ID is not set. &lt;/li&gt;</exception>
</Item>
<Item type="HelpItem">
<id>P:Aras.IOM.Item.dom</id>
<label>dom</label>
<code>Public  dom</code>
<comments><![CDATA[A reference to the instance of ArasXmlDocument that holds the data for the Item in the AML format. ArasXmlDocument is an alias that represents System.Xml.XmlDocument when IOM namespace is used from .NET (C#, VBScript) and MSXML2.IXMLDOMDocument when it used from COM (JavaScript).]]></comments>
</Item>
<Item type="HelpItem">
<id>P:Aras.IOM.Item.node</id>
<label>node</label>
<code>Public  node</code>
<comments><![CDATA[A reference to the <Item> node in the dom for this Item instance. The type of node is System.Xml.XmlElement when IOM namespace is used from .NET (C#, VBScript) and MSXML2.IXMLDOMElement when it used from COM (JavaScript).]]></comments>
</Item>
<Item type="HelpItem">
<id>P:Aras.IOM.Item.nodeList</id>
<label>nodeList</label>
<code>Public  nodeList</code>
<comments><![CDATA[List of <Item> nodes from the dom for this Item instance. The type of nodeList is System.Xml.XmlNodeList when IOM namespace is used from .NET (C#, VBScript) and MSXML2.IXMLDOMNodeList when it used from COM (JavaScript).]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.CallAction(System.String,System.Xml.XmlDocument,System.Xml.XmlDocument)</id>
<label>CallAction</label>
<arguments>
<parameter type="" name="actionName">Action name.</parameter>
<parameter type="" name="inDOM"> containing AML to send to Innovator Server.</parameter>
<parameter type="" name="outDOM"> containing AML response from Innovator Server.</parameter>
</arguments>
<code>Public  CallAction(System.String,System.Xml.XmlDocument,System.Xml.XmlDocument)</code>
<comments><![CDATA[Call the specified action on Innovator Server. Not implemented.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.DebugLog(System.String,System.Object)</id>
<label>DebugLog</label>
<arguments>
<parameter type="" name="reason"></parameter>
<parameter type="" name="msg"></parameter>
</arguments>
<code>Public  DebugLog(System.String,System.Object)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.DebugLogP</id>
<label>DebugLogP</label>
<code>Public  DebugLogP()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.DownloadFile(Aras.IOM.Item,System.String,System.Boolean)</id>
<label>DownloadFile</label>
<arguments>
<parameter type="" name="fileItem">Item of type 'File' to download. If attribute '__aras_file_has_all_located__' is set to '1' then redundant request will be ommited.</parameter>
<parameter type="" name="fileName">Path where the physical file will be downloaded to.</parameter>
<parameter type="" name="overwrite">Specifies if the file should be overwritten if file with the same name already exists.</parameter>
</arguments>
<code>Public  DownloadFile(Aras.IOM.Item,System.String,System.Boolean)</code>
<comments><![CDATA[Downloads the specified physical file to the specified directory.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.Equals(System.Object)</id>
<label>Equals</label>
<arguments>
<parameter type="" name="obj"></parameter>
</arguments>
<code>Public  Equals(System.Object)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.GetDatabaseName</id>
<label>GetDatabaseName</label>
<code>Public  GetDatabaseName()</code>
<comments><![CDATA[Returns name of the current database in use.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.GetDatabases</id>
<label>GetDatabases</label>
<returns>List of databases id</returns>
<code>Public  GetDatabases()</code>
<comments><![CDATA[Returns all configured databases]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.getFileUrl(System.String,Aras.IOM.UrlType)</id>
<label>getFileUrl</label>
<arguments>
<parameter type="" name="fileId"></parameter>
<parameter type="" name="type"></parameter>
</arguments>
<code>Public  getFileUrl(System.String,Aras.IOM.UrlType)</code>
<comments><![CDATA[Returns file url with a security token by it's Id. IR-014093 "Thumbnails in PE"]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.getFileUrls(System.Collections.ArrayList,Aras.IOM.UrlType)</id>
<label>getFileUrls</label>
<arguments>
<parameter type="" name="fileIds"></parameter>
<parameter type="" name="type"></parameter>
</arguments>
<code>Public  getFileUrls(System.Collections.ArrayList,Aras.IOM.UrlType)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.GetFromCache(System.String)</id>
<label>GetFromCache</label>
<arguments>
<parameter type="" name="key"></parameter>
</arguments>
<code>Public  GetFromCache(System.String)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetHashCode</id>
<label>GetHashCode</label>
<code>Public  GetHashCode()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.ServerConnectionBase.GetLicenseInfo</id>
<label>GetLicenseInfo</label>
<code>Overload:Aras.IOM.ServerConnectionBase.GetLicenseInfo</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.GetLicenseInfo</id>
<label>GetLicenseInfo</label>
<code>Public  GetLicenseInfo()</code>
<comments><![CDATA[Returns information about subscription and all add-on's]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.GetLicenseInfo(System.String,System.String)</id>
<label>GetLicenseInfo</label>
<arguments>
<parameter type="" name="issuer">Select addons by issuer. Skip if null or empty.</parameter>
<parameter type="" name="addon_name">Select add-ons by the name. Skip if null or empty.</parameter>
</arguments>
<code>Public  GetLicenseInfo(System.String,System.String)</code>
<comments><![CDATA[Returns information about subscription and all add-on's]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.GetOperatingParameter(System.String,System.Object)</id>
<label>GetOperatingParameter</label>
<arguments>
<parameter type="" name="name"></parameter>
<parameter type="" name="defaultvalue"></parameter>
</arguments>
<code>Public  GetOperatingParameter(System.String,System.Object)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.GetSrvContext</id>
<label>GetSrvContext</label>
<code>Public  GetSrvContext()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetType</id>
<label>GetType</label>
<code>Public  GetType()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.getUserID</id>
<label>getUserID</label>
<code>Public  getUserID()</code>
<comments><![CDATA[Returns id of current logged in Innovator user. Throws exception if there is no logged in user.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.getUserInfo</id>
<label>getUserInfo</label>
<code>Public  getUserInfo()</code>
<comments><![CDATA[Returns result of the request for user’s info cached during the login]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.GetValidateUserXmlResult</id>
<label>GetValidateUserXmlResult</label>
<code>Public  GetValidateUserXmlResult()</code>
<comments><![CDATA[Results of ValidateUser action should be returned by the method and they are required to instantiate I18NSessionContext.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.InsertIntoCache(System.String,System.Object,System.String)</id>
<label>InsertIntoCache</label>
<arguments>
<parameter type="" name="key"></parameter>
<parameter type="" name="value"></parameter>
<parameter type="" name="path"></parameter>
</arguments>
<code>Public  InsertIntoCache(System.String,System.Object,System.String)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.ToString</id>
<label>ToString</label>
<code>Public  ToString()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.CallAction(System.String,System.Xml.XmlDocument,System.Xml.XmlDocument)</id>
<label>CallAction</label>
<arguments>
<parameter type="" name="actionName"></parameter>
<parameter type="" name="inDom"></parameter>
<parameter type="" name="outDom"></parameter>
</arguments>
<code>Public  CallAction(System.String,System.Xml.XmlDocument,System.Xml.XmlDocument)</code>
<comments><![CDATA[Send a request with the specified action and AML to Innovator server and write the obtained response into the outDOM.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.DebugLog(System.String,System.Object)</id>
<label>DebugLog</label>
<arguments>
<parameter type="" name="reason"></parameter>
<parameter type="" name="msg"></parameter>
</arguments>
<code>Public  DebugLog(System.String,System.Object)</code>
<comments><![CDATA[The method is not supported by the class.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.DebugLogP</id>
<label>DebugLogP</label>
<code>Public  DebugLogP()</code>
<comments><![CDATA[The method is not supported by the class.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.DownloadFile(Aras.IOM.Item,System.String,System.Boolean)</id>
<label>DownloadFile</label>
<arguments>
<parameter type="" name="fileItem"></parameter>
<parameter type="" name="fileName"></parameter>
<parameter type="" name="overwrite"></parameter>
</arguments>
<code>Public  DownloadFile(Aras.IOM.Item,System.String,System.Boolean)</code>
<comments><![CDATA[Downloads the specified physical file to the specified directory.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.Equals(System.Object)</id>
<label>Equals</label>
<arguments>
<parameter type="" name="obj"></parameter>
</arguments>
<code>Public  Equals(System.Object)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.GetDatabaseName</id>
<label>GetDatabaseName</label>
<code>Public  GetDatabaseName()</code>
<comments><![CDATA[Returns name of the current database in use.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.GetDatabases</id>
<label>GetDatabases</label>
<code>Public  GetDatabases()</code>
<comments><![CDATA[Returns all configured databases]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.getFileUrl(System.String,Aras.IOM.UrlType)</id>
<label>getFileUrl</label>
<arguments>
<parameter type="" name="fileId"></parameter>
<parameter type="" name="type"></parameter>
</arguments>
<code>Public  getFileUrl(System.String,Aras.IOM.UrlType)</code>
<comments><![CDATA[Returns file full file url. In some cases with AuthenticationBroker's token.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.getFileUrls(System.Collections.ArrayList,Aras.IOM.UrlType)</id>
<label>getFileUrls</label>
<arguments>
<parameter type="" name="fileIds"></parameter>
<parameter type="" name="type"></parameter>
</arguments>
<code>Public  getFileUrls(System.Collections.ArrayList,Aras.IOM.UrlType)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.GetFromCache(System.String)</id>
<label>GetFromCache</label>
<arguments>
<parameter type="" name="key"></parameter>
</arguments>
<code>Public  GetFromCache(System.String)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetHashCode</id>
<label>GetHashCode</label>
<code>Public  GetHashCode()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.WinAuthHttpServerConnection.GetLicenseInfo</id>
<label>GetLicenseInfo</label>
<code>Overload:Aras.IOM.WinAuthHttpServerConnection.GetLicenseInfo</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.GetLicenseInfo(System.String,System.String)</id>
<label>GetLicenseInfo</label>
<arguments>
<parameter type="" name="issuer"></parameter>
<parameter type="" name="addonName"></parameter>
</arguments>
<code>Public  GetLicenseInfo(System.String,System.String)</code>
<comments><![CDATA[Returns information about subscription and specified add-on's]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.GetLicenseInfo</id>
<label>GetLicenseInfo</label>
<code>Public  GetLicenseInfo()</code>
<comments><![CDATA[Returns information about subscription and all add-on's]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.GetOperatingParameter(System.String,System.Object)</id>
<label>GetOperatingParameter</label>
<arguments>
<parameter type="" name="name"></parameter>
<parameter type="" name="defaultvalue"></parameter>
</arguments>
<code>Public  GetOperatingParameter(System.String,System.Object)</code>
<comments><![CDATA[The method is not supported by the class.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.GetSrvContext</id>
<label>GetSrvContext</label>
<code>Public  GetSrvContext()</code>
<comments><![CDATA[The method is not supported by the class.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.GetType</id>
<label>GetType</label>
<code>Public  GetType()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.getUserID</id>
<label>getUserID</label>
<code>Public  getUserID()</code>
<comments><![CDATA[If Login() was already called, returns id of the user assosiated with the connection; otherwise throws an exception.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.getUserInfo</id>
<label>getUserInfo</label>
<code>Public  getUserInfo()</code>
<comments><![CDATA[Returns result of the request for user’s info cached during the login]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.GetValidateUserXmlResult</id>
<label>GetValidateUserXmlResult</label>
<code>Public  GetValidateUserXmlResult()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.ServerConnectionBase.InsertIntoCache(System.String,System.Object,System.String)</id>
<label>InsertIntoCache</label>
<arguments>
<parameter type="" name="key"></parameter>
<parameter type="" name="value"></parameter>
<parameter type="" name="path"></parameter>
</arguments>
<code>Public  InsertIntoCache(System.String,System.Object,System.String)</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.Login</id>
<label>Login</label>
<code>Public  Login()</code>
<comments><![CDATA[Login into Innovator server.]]></comments>
</Item>
<Item type="HelpItem">
<id>Overload:Aras.IOM.WinAuthHttpServerConnection.Logout</id>
<label>Logout</label>
<code>Overload:Aras.IOM.WinAuthHttpServerConnection.Logout</code>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.Logout(System.Boolean)</id>
<label>Logout</label>
<arguments>
<parameter type="" name="unlockOnLogout"></parameter>
</arguments>
<code>Public  Logout(System.Boolean)</code>
<comments><![CDATA[Logout from Innovator.]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.Logout</id>
<label>Logout</label>
<code>Public  Logout()</code>
<comments><![CDATA[Logout from Innovator (do not unlock locked Items).]]></comments>
</Item>
<Item type="HelpItem">
<id>M:System.Object.ToString</id>
<label>ToString</label>
<code>Public  ToString()</code>
<comments><![CDATA[]]></comments>
</Item>
<Item type="HelpItem">
<id>M:Aras.IOM.HttpServerConnection.UsingParameters(Aras.IOM.HttpConnectionParameters,System.Action)</id>
<label>UsingParameters</label>
<arguments>
<parameter type="" name="parameters"></parameter>
<parameter type="" name="action"></parameter>
</arguments>
<code>Public  UsingParameters(Aras.IOM.HttpConnectionParameters,System.Action)</code>
<comments><![CDATA[Call action with special HttpConnectionParams]]></comments>
</Item>
<Item type="HelpItem">
<id>P:Aras.IOM.HttpServerConnection.Compression</id>
<label>Compression</label>
<code>Public  Compression</code>
<comments><![CDATA[Property specifies the way of compression of AML sent through IOM.HttpServerConnection. Value from enumeration 'CompressionType' (namespace Aras.Common.Compression) can be set. Available values are: gzip data compression to the gzip format deflate data compression to the deflate format none Default value. Data sent through IOM.HttpServerConnection aren't compressed. It is highly recommended to store type of compression you are using in configuration file of your application. Example section of application configuration file: <configuration> <appSettings> <add key="CompressionType" value="gzip"/> </appSettings > </configuration> Examples of setting value of Compression property from application configuration file. ... HttpServerConnection connection = CreateHttpServerConnection("innovatorServerUrl"); connaction.Compression = GetCompressionTypeFromAppConfig(); ... private CompressionType GetCompressionTypeFromAppConfig() { string value = ConfigurationManager.AppSettings["CompressionType"]; if (String.IsNullOrEmpty(value)) { return CompressionType.none; } else { return (CompressionType)Enum.Parse(typeof(CompressionType), value); } } ... Dim connection As HttpServerConnection = IomFactory.CreateHttpServerConnection("connectionstring") connection.Compression = GetCompressionTypeFromAppConfig() ... Private Function GetCompressionTypeFromAppConfig() As CompressionType Dim value As String = ConfigurationManager.AppSettings("CompressionType") If (String.IsNullOrEmpty(value)) Then Return CompressionType.none Else Return CType([Enum].Parse(GetType(CompressionType), value), CompressionType) End If End Function]]></comments>
</Item>
<Item type="HelpItem">
<id>P:Aras.IOM.HttpServerConnection.ReadWriteTimeout</id>
<label>ReadWriteTimeout</label>
<code>Public  ReadWriteTimeout</code>
<comments><![CDATA[Gets or sets a time-out in milliseconds when writing to or reading from a stream.]]></comments>
</Item>
<Item type="HelpItem">
<id>P:Aras.IOM.HttpServerConnection.Timeout</id>
<label>Timeout</label>
<code>Public  Timeout</code>
<comments><![CDATA[Gets or sets the time-out value in milliseconds for the System.Net.HttpWebRequest.GetResponse() and System.Net.HttpWebRequest.GetRequestStream() methods.]]></comments>
</Item>
</AML>
      
      
      
      
    
  
